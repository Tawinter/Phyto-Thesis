Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
### Summarizing with Tables and Graphs
* What is fl?
* Examine hwy  (highway mileage)
* Histogram
* Frequency Table / Bar Graphs
* Scatterplot
* Boxplot,  Conditioning Plot
```{r Summarizing and Graphing Part 1 }
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
detach(mpg)
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
hist(mpg$hwy, main="highway fuel efficiency in miles/gal", xlab="highway mpg")
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
```
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
head(mpg)
library(ggplot)
data(mpg)
head(mpg)
tail (mpg)
#What is fl?
table(mpg$fl)
#highway miles per gallon
hist(mpg$hwy)
# using with makes graph annotations cleaner
par(mfrow=c(1,2))
with(mpg,hist(hwy))
#Inserting a title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal",cex.main=.7,xlab=highway mpg))
#Inserting a title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal",cex.main=.7,xlab="highway mpg"))
boxplot(mpg$hwy,main = "highway mileage")
library(MASS)
data(cars93)
head(cars93)
library(MASS)
data(cars93)
head(cars93)
library(MASS)
data(cars93)
library(cars93)
library(MASS)
data("Cars93")
head(Cars93)
dim(Cars93)
attach(Cars93)
hist(mpg.highway,xlab="miles per us gallon", main="histogram")
hist(MPG.highway,xlab="Miles per US Gallon", main="Histogram")
show_col(hue_pal()(4)) ggplot2_color_codes_level_4_from_scales
setwd("C:/Users/twint/OneDrive/Desktop/Phytoplankton Thesis")
library(ggplot2)
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
hampton["Alex"][hampton["Alex"] == "NA"] <- "0"
hampton["Large_PN"][hampton["Large_PN"] == "NA"] <- "0"
hampton["Small_PN"][hampton["Small_PN"] == "NA"] <- "0"
cml["Alex"][cml["Alex"] == "NA"] <- "0"
cml["Large_PN"][cml["Large_PN"] == "NA"] <- "0"
cml["Small_PN"][cml["Small_PN"] == "NA"] <- "0"
#change NAs to 0.01
hampton["Alex"][hampton["Alex"] == "NA"] <- "0"
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
View(cml)
View(hampton)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
cml$Alex <- as.numeric(cml$Alex)
cml$Large_PN <- as.numeric(cml$Large_PN)
cml$Small_PN <- as.numeric(cml$Small_PN)
hampton$Alex <- as.numeric(hampton$Alex)
hampton$Large_PN <- as.numeric(hampton$Large_PN)
hampton$Small_PN <- as.numeric(hampton$Small_PN)
ggplot(hampton[which(hampton$Alex>0),],
mapping = aes(x = Year, y = Alex)) +
geom_point() +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_classic() +
labs(x = "Year", y = "Abundance (Cells/l)")
ggplot(hampton[which(hampton$Large_PN>0),],
mapping = aes(x = Year, y = Large_PN)) +
geom_point() +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_classic() +
labs(x = "Year", y = "Abundance (Cells/l)")
ggplot(hampton[which(hampton$Small_PN>0),],
mapping = aes(x = Year, y = Small_PN)) +
geom_point() +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_classic() +
labs(x = "Year", y = "Abundance (Cells/l)")
ggplot(cml[which(cml$Alex>0),],
mapping = aes(x = Year, y = Alex)) +
geom_point() +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_classic() +
labs(x = "Year", y = "Abundance (Cells/l)")
ggplot(cml[which(cml$Large_PN>0),],
mapping = aes(x = Year, y = Large_PN)) +
geom_point() +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_classic() +
labs(x = "Year", y = "Abundance (Cells/l)")
ggplot(cml[which(cml$Small_PN>0),],
mapping = aes(x = Year, y = Small_PN)) +
geom_point() +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_classic() +
labs(x = "Year", y = "Abundance (Cells/l)")
#Following graphs are scales used highest value and divided all values by this number to create a scale of 0 to 1
max(cml$Alex)
#Following graphs are scales used highest value and divided all values by this number to create a scale of 0 to 1
max(cml$Large_PN)
cml[is.na(cml$Alex)] <- 0
hampton["Alex"][hampton["Alex"] == "NA"] <- "0.01"
#Following graphs are scales used highest value and divided all values by this number to create a scale of 0 to 1
max(hampton$Alex, na.rm = TRUE)
install.packages("dplyr")
library(dplyr)
max(hampton$Alex, na.rm = TRUE)
#Divding column by max value and creating new column using mutate
hampton %>%
mutate(alex_scaled = Alex/1807.5)
#Divding column by max value and creating new column using mutate
hampton_scale_1 <- hampton %>%
mutate(alex_scaled = Alex/1807.5)
View(hampton_scale_1)
max(hampton$Large_PN, na.rm = TRUE)
hampton_scale_2 <- hampton %>%
mutate(large_PN_scaled = Large_PN/26767.5)
View(hampton_scale_2)
hampton_scale_2 <- hampton_scale_1 %>%
mutate(large_PN_scaled = Large_PN/26767.5)
max(hampton$Small_PN, na.rm = TRUE)
hampton_scale_final <- hampton_scale_2 %>%
mutate(small_PN_scaled = Small_PN/max(hampton$Small_PN, na.rm = TRUE))
View(hampton_scale_final)
hampton_scale_final <- hampton_scale_2 %>%
mutate(small_PN_scaled = Small_PN/1150000)
#Divding column by max value and creating new column using mutate
hampton_scale_1 <- hampton %>%
mutate(alex_scaled = Alex/max(hampton$Alex, na.rm = TRUE))
hampton_scale_2 <- hampton_scale_1 %>%
mutate(large_PN_scaled = Large_PN/max(hampton$Large_PN, na.rm = TRUE))
hampton_scale_final <- hampton_scale_2 %>%
mutate(small_PN_scaled = Small_PN/max(hampton$Small_PN, na.rm = TRUE))
cml_scale_1 <- hampton %>%
mutate(alex_scaled = Alex/max(cml$Alex, na.rm = TRUE))
View(cml_scale_1)
cml_scale_2 <- cml_scale_1 %>%
mutate(large_PN_scaled = Large_PN/max(cml$Large_PN, na.rm = TRUE))
cml_scale_final <- cml_scale_2 %>%
mutate(small_PN_scaled = Small_PN/max(cml$Small_PN, na.rm = TRUE))
View(cml_scale_final)
View(cml)
View(cml_scale_final)
View(cml_scale_1)
View(cml)
View(cml_scale_1)
cml_scale_1 <- cml %>%
mutate(alex_scaled = Alex/max(cml$Alex, na.rm = TRUE))
cml_scale_2 <- cml_scale_1 %>%
mutate(large_PN_scaled = Large_PN/max(cml$Large_PN, na.rm = TRUE))
cml_scale_final <- cml_scale_2 %>%
mutate(small_PN_scaled = Small_PN/max(cml$Small_PN, na.rm = TRUE))
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled, color = Year)) +
geom_point() +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled, color = Year)) +
geom_point() +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55))
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled, color = Year)) +
geom_point() +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
?scale_color_continuous
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled, color = Year)) +
geom_point() +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
scale_color_brewer(palette = "Set1") +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
?scale_color_manual
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled, color = Year)) +
geom_point() +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
scale_color_manual(palette = "Set1") +
theme_classic(values = viridis) +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled, color = Year)) +
geom_point() +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
scale_color_manual(values = viridis) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
#Creating own color values
cols <- c("2017"="red", "2018"="blue", "2019"="purple", "2020"="green", "2021"="black")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = large_PN_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = small_PN_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(cml_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(cml_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(cml_scale_final, mapping = aes(x = Week, y = large_PN_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = large_PN_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(cml_scale_final, mapping = aes(x = Week, y = small_PN_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(tinytex)
library(dplyr)
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
cml$Alex <- as.numeric(cml$Alex)
cml$Large_PN <- as.numeric(cml$Large_PN)
cml$Small_PN <- as.numeric(cml$Small_PN)
hampton$Alex <- as.numeric(hampton$Alex)
hampton$Large_PN <- as.numeric(hampton$Large_PN)
hampton$Small_PN <- as.numeric(hampton$Small_PN)
hampton_scale_1 <- hampton %>%
mutate(alex_scaled = Alex/max(hampton$Alex, na.rm = TRUE))
hampton_scale_2 <- hampton_scale_1 %>%
mutate(large_PN_scaled = Large_PN/max(hampton$Large_PN, na.rm = TRUE))
hampton_scale_final <- hampton_scale_2 %>%
mutate(small_PN_scaled = Small_PN/max(hampton$Small_PN, na.rm = TRUE))
cml_scale_1 <- cml %>%
mutate(alex_scaled = Alex/max(cml$Alex, na.rm = TRUE))
cml_scale_2 <- cml_scale_1 %>%
mutate(large_PN_scaled = Large_PN/max(cml$Large_PN, na.rm = TRUE))
cml_scale_final <- cml_scale_2 %>%
mutate(small_PN_scaled = Small_PN/max(cml$Small_PN, na.rm = TRUE))
cols <- c("2017"="red", "2018"="blue", "2019"="purple", "2020"="green", "2021"="black")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)", fill = "Year")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = Year)) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor =(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
?legend.title
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point() +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
?labs
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)") +
guides(fill=guide_legend(title="Year"))
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year), guides(fill=guide_legend(title="Year")))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)", guides(fill=guide_legend(title="Year")))
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled, color = Year)) +
geom_point() +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
scale_fill_discrete(name = "Year") +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols, guide_legend(override.aes = list(title = "Year"))) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols, guide_legend(override.aes = "Year")) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols, guide_legend(override.aes = Year)) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols, guide_legend(override.aes = list(Year))) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols, guide_legend(override.aes = list("Year"))) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
?override.aes
??override.aes
?guide_legend
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols, guide_legend(override.aes = list(title = waiver(Year)))) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols, guide_legend(override.aes = list(title = waiver("Year")))) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols, guide_legend(override.aes = list(title = waiver()))) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)", fill = "Year")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols, guide_legend(override.aes = list())) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)", fill = "Year")
ggplot(hampton_scale_final, mapping = aes(x = Week, y = alex_scaled)) +
geom_point(aes(color = factor(Year))) +
scale_color_manual(values = cols) +
scale_x_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50,55)) +
theme_classic() +
labs(x = "Week of the Year", y = "Scaled Abundance (Cells/l)", fill = "Year")
library(ggplot2)
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
cml$Alex <- as.numeric(cml$Alex)
cml$Large_PN <- as.numeric(cml$Large_PN)
cml$Small_PN <- as.numeric(cml$Small_PN)
hampton$Alex <- as.numeric(hampton$Alex)
hampton$Large_PN <- as.numeric(hampton$Large_PN)
hampton$Small_PN <- as.numeric(hampton$Small_PN)
#plot only greater than values example code
ggplot(df[which(df$x>0),],aes(x,y))+geom_point()
