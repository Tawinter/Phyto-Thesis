with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
---
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
### Summarizing with Tables and Graphs
* What is fl?
* Examine hwy  (highway mileage)
* Histogram
* Frequency Table / Bar Graphs
* Scatterplot
* Boxplot,  Conditioning Plot
```{r Summarizing and Graphing Part 1 }
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
detach(mpg)
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
hist(mpg$hwy, main="highway fuel efficiency in miles/gal", xlab="highway mpg")
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
```
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
boxplot(hwy~year,data = mpg)  #  better
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
Boxplot
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
---
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
### Summarizing with Tables and Graphs
* What is fl?
* Examine hwy  (highway mileage)
* Histogram
* Frequency Table / Bar Graphs
* Scatterplot
* Boxplot,  Conditioning Plot
```{r Summarizing and Graphing Part 1 }
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
detach(mpg)
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
hist(mpg$hwy, main="highway fuel efficiency in miles/gal", xlab="highway mpg")
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
```
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
head(mpg)
library(ggplot)
data(mpg)
head(mpg)
tail (mpg)
#What is fl?
table(mpg$fl)
#highway miles per gallon
hist(mpg$hwy)
# using with makes graph annotations cleaner
par(mfrow=c(1,2))
with(mpg,hist(hwy))
#Inserting a title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal",cex.main=.7,xlab=highway mpg))
#Inserting a title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal",cex.main=.7,xlab="highway mpg"))
boxplot(mpg$hwy,main = "highway mileage")
library(MASS)
data(cars93)
head(cars93)
library(MASS)
data(cars93)
head(cars93)
library(MASS)
data(cars93)
library(cars93)
library(MASS)
data("Cars93")
head(Cars93)
dim(Cars93)
attach(Cars93)
hist(mpg.highway,xlab="miles per us gallon", main="histogram")
hist(MPG.highway,xlab="Miles per US Gallon", main="Histogram")
show_col(hue_pal()(4)) ggplot2_color_codes_level_4_from_scales
setwd("D:/R/phyto-thesis")
library(ggplot2)
library(tinytex)
library(dplyr)
library(tidyr)
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
#Sum the large and small PN values and create a new column in the same dataframe
cml <- cml %>% rowwise() %>%
mutate(PnTotal = sum(c_across(Large_PN:Small_PN)))
hampton <- hampton %>% rowwise() %>%
mutate(PnTotal = sum(c_across(Large_PN:Small_PN)))
View(cml)
library(ggplot2)
library(tinytex)
library(dplyr)
library(tidyr)
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
size_cml <- cml[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
View(size_cml)
size_cml <- gather(cml, Class, Abundance, Large_PN:Small_PN, factor_key=TRUE)
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
View(cml)
size_cml <- cml[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
View(size_cml)
size_cml <- gather(size_cml, Class, Abundance, Large_PN:Small_PN, factor_key=TRUE)
size_hampton <- hampton[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
size_hampton <- gather(size_hampton, Class, Abundance, Large_PN:Small_PN, factor_key=TRUE)
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml, aes(x = Week, y = Abundance))+
geom_col(aes(fill = Class))
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml, aes(x = Week, y = Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml[which(size_cml$Abundance>0),], aes(x = Week, y = Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml[which(size_cml$Abundance>0),], aes(x = Week, y = Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
size_cml <- cml[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
size_hampton <- hampton[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
View(size_cml)
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Month) %>%
summarize_at(c("Large_PN", "Small_PN"), mean, na.rm = TRUE)
View(size_cml_1)
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), mean, na.rm = TRUE)
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), average, na.rm = TRUE)
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), mean, na.rm = TRUE)
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), sum, na.rm = TRUE)
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
size_cml <- cml[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
size_hampton <- hampton[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), sum, na.rm = TRUE)
size_hampton_1 <- size_hampton %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), sum, na.rm = TRUE)
#Turn into long data
size_cml_1 <- gather(size_cml_1, Class, Sum_Abundance, Large_PN:Small_PN, factor_key=TRUE)
size_hampton_1 <- gather(size_hampton_1, Class, Sum_Abundance, Large_PN:Small_PN, factor_key=TRUE)
View(size_cml_1)
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Week, y = Abundance))+
geom_col(aes(fill = Class)) +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Week, y = Sum_Abundance))+
geom_col(aes(fill = Month)) +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Month)) +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_cml$Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_cml_1$Sum_Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_cml_1$Sum_Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
ggplot(size_hampton_1[which(size_hampton_1$Sum_Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_cml_1$Sum_Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_hampton_1$Sum_Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_cml_1$Sum_Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_cml_1$Year== 2017),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Log Total Abundance (Cells/l)")
ggplot(size_hampton_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Log Total Abundance (Cells/l)")
ggplot(size_hampton_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Log Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2017),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Log Total Abundance (Cells/l)")
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_hampton_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2017),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2017),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2017),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2018),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2019),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2020),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2021),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2017),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2018),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2019),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2020),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2021),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
