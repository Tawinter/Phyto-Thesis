faithful
library(maps)
require(maps)
map('state')
x(1:12)
x[1:12]
x=(1:12)
save.image("C:/Users/twint/OneDrive - University of New Hampshire/Intro to R/Trialworkspace.RData")
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
---
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
### Summarizing with Tables and Graphs
* What is fl?
* Examine hwy  (highway mileage)
* Histogram
* Frequency Table / Bar Graphs
* Scatterplot
* Boxplot,  Conditioning Plot
```{r Summarizing and Graphing Part 1 }
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
```
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
hist(mpg$hwy, main="highway fuel efficiency in miles/gal", xlab="highway mpg")
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
detach(mpg)
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
---
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
### Summarizing with Tables and Graphs
* What is fl?
* Examine hwy  (highway mileage)
* Histogram
* Frequency Table / Bar Graphs
* Scatterplot
* Boxplot,  Conditioning Plot
```{r Summarizing and Graphing Part 1 }
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
detach(mpg)
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
hist(mpg$hwy, main="highway fuel efficiency in miles/gal", xlab="highway mpg")
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
```
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
boxplot(hwy~year,data = mpg)  #  better
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
Boxplot
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
---
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
### Summarizing with Tables and Graphs
* What is fl?
* Examine hwy  (highway mileage)
* Histogram
* Frequency Table / Bar Graphs
* Scatterplot
* Boxplot,  Conditioning Plot
```{r Summarizing and Graphing Part 1 }
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
detach(mpg)
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
hist(mpg$hwy, main="highway fuel efficiency in miles/gal", xlab="highway mpg")
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
```
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
head(mpg)
library(ggplot)
data(mpg)
head(mpg)
tail (mpg)
#What is fl?
table(mpg$fl)
#highway miles per gallon
hist(mpg$hwy)
# using with makes graph annotations cleaner
par(mfrow=c(1,2))
with(mpg,hist(hwy))
#Inserting a title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal",cex.main=.7,xlab=highway mpg))
#Inserting a title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal",cex.main=.7,xlab="highway mpg"))
boxplot(mpg$hwy,main = "highway mileage")
library(MASS)
data(cars93)
head(cars93)
library(MASS)
data(cars93)
head(cars93)
library(MASS)
data(cars93)
library(cars93)
library(MASS)
data("Cars93")
head(Cars93)
dim(Cars93)
attach(Cars93)
hist(mpg.highway,xlab="miles per us gallon", main="histogram")
hist(MPG.highway,xlab="Miles per US Gallon", main="Histogram")
show_col(hue_pal()(4)) ggplot2_color_codes_level_4_from_scales
library(dplyr)
library(tidyr)
library(formattable)
library(forcats)
library(tidyverse)
setwd("C:/phyto-thesis")
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Temp", "Salinity")
View(cml)
cml_reduced <- cml[ , c("Month", "Year", "Alex", "Large_PN", "Small_PN")]
View(cml_reduced)
#Convert month number to month 3 letter abbreviation
mymonths <- c("Jan","Feb","Mar",
"Apr","May","Jun",
"Jul","Aug","Sep",
"Oct","Nov","Dec")
cml_reduced$MoAb <- mymonths[ cml_reduced$Month ]
#Concentrate Month and Year column with -
cml_reduced$MY <- paste(cml_reduced$MoAb, "-", cml_reduced$Year)
#Get the sum per month and create new dataframes
cml_lpn_s <- cml_reduced %>%
group_by(fct_inorder(MY)) %>%
summarize_at(c("Large_PN"), sum, na.rm = TRUE)
cml_a_s <- cml_reduced %>%
group_by(fct_inorder(MY)) %>%
summarize_at(c("Alex"), sum, na.rm = TRUE)
cml_spn_s <- cml_reduced %>%
group_by(fct_inorder(MY)) %>%
summarize_at(c("Small_PN"), sum, na.rm = TRUE)
#Join summary dataframes together
cmlnut <- inner_join(cml_a_s, cml_lpn_s, by = c('fct_inorder(MY)'))
cmlnut <- inner_join(cmlnut, cml_spn_s, by = c('fct_inorder(MY)'))
View(cmlnut)
#Rename columns
colnames(hamptonNut)<- c("fct_inorder(MY)", "Alex(Sum)", "Large_PN(Sum)", "Small_PN(Sum)")
colnames(cmlnut)<- c("fct_inorder(MY)", "Alex(Sum)", "Large_PN(Sum)", "Small_PN(Sum)")
#Find the average per month and create new dataframes
cml_lpn_a <- cml_reduced %>%
group_by(fct_inorder(MY)) %>%
summarize_at(c("Large_PN"), mean, na.rm = TRUE)
cml_a_a <- cml_reduced %>%
group_by(fct_inorder(MY)) %>%
summarize_at(c("Alex"), mean, na.rm = TRUE)
cml_spn_a <- cml_reduced %>%
group_by(fct_inorder(MY)) %>%
summarize_at(c("Small_PN"), mean, na.rm = TRUE)
#Join averages with summaries
cmlnut <- inner_join(cmlnut, cml_a_a, by = c('fct_inorder(MY)'))
cmlnut <- inner_join(cmlnut, cml_lpn_a, by = c('fct_inorder(MY)'))
cmlnut <- inner_join(cmlnut, cml_spn_a, by = c('fct_inorder(MY)'))
colnames(cmlnut)<- c("fct_inorder(MY)", "Alex(Sum)", "Large_PN(Sum)", "Small_PN(Sum)",
"Alex(avg)", "Large_PN(avg)", "Small_PN(avg)")
#Read in new csv files and nutrient data
cmlnut <- read.csv("CML_Nut.csv" , stringsAsFactors = TRUE)
cml_chla <- read.csv("./PREP/cml_chla.csv", stringsAsFactors = TRUE)
cml_n <- read.csv("./PREP/cml_nitrate_nitrite.csv", stringsAsFactors = TRUE)
cml_p <- read.csv("./PREP/cml_phosphorus.csv", stringsAsFactors = TRUE)
cml_sal <- read.csv("./PREP/cml_salinity.csv", stringsAsFactors = TRUE)
cml_si <- read.csv("./PREP/cml_silica.csv", stringsAsFactors = TRUE)
cml_temp <- read.csv("./PREP/cml_temp.csv", stringsAsFactors = TRUE)
cml_tss <- read.csv("./PREP/cml_tss.csv", stringsAsFactors = TRUE)
ulb_chla <- read.csv("./PREP/grbulb_chla.csv", stringsAsFactors = TRUE)
ulb_n <- read.csv("./PREP/grbulb_Nitrate_Nitrite.csv", stringsAsFactors = TRUE)
ulb_p <- read.csv("./PREP/grbulb_phosphorus.csv", stringsAsFactors = TRUE)
ulb_sal <- read.csv("./PREP/grbulb_salinity.csv", stringsAsFactors = TRUE)
ulb_temp <- read.csv("./PREP/grbulb_temp.csv", stringsAsFactors = TRUE)
ulb_tss <- read.csv("./PREP/grbulb_tss.csv", stringsAsFactors = TRUE)
sag_chla <- read.csv("./PREP/04sag_chla.csv", stringsAsFactors = TRUE)
sag_n <- read.csv("./PREP/04sag_nitrogen.csv", stringsAsFactors = TRUE)
bchn_sal<- read.csv("./PREP/bchn_salinity.csv", stringsAsFactors = TRUE)
bchn_temp <- read.csv("./PREP/bchn_temp.csv", stringsAsFactors = TRUE)
gb_n <- read.csv("./PREP/grbgb_nitrogen.csv", stringsAsFactors = TRUE)
or_chla <- read.csv("./PREP/grbor_chla.csv", stringsAsFactors = TRUE)
#Create new dataframe pulling out only wanted years
cfil_chla <- cml_chla %>% filter(year >= 2017)
cfil_n <- cml_n %>% filter(year >= 2017)
cfil_p <- cml_p %>% filter(year >= 2017)
cfil_sal <- cml_sal %>% filter(Year >= 2017)
cfil_si <- cml_si %>% filter(year >= 2017)
cfil_temp <- cml_temp %>% filter(Year >= 2017)
cfil_tss <- cml_tss %>% filter(year >= 2017)
bfil_sal <- bchn_sal %>% filter(Year >= 2017)
bfil_temp <- bchn_temp %>% filter(Year >= 2017)
gfil_n <- gb_n %>% filter(Year >= 2017)
ofil_chla <- or_chla %>% filter(Year >= 2017)
#Create new dataframe keeping only wanted columns
cfil_chla <- cfil_chla[ , c("Month", "datavalue", "year")]
cfil_n <- cfil_n[ , c("Month", "datavalue", "year")]
cfil_p <- cfil_p[ , c("Month", "datavalue", "year")]
cfil_sal <- cfil_sal[ , c("Month", "datavalue", "Year")]
cfil_si <- cfil_si[ , c("Month", "datavalue", "year")]
cfil_temp <- cfil_temp[ , c("Month", "datavalue", "Year")]
cfil_tss <- cfil_tss[ , c("Month", "datavalue", "year")]
ufil_chla <- ulb_chla[ , c("Month", "datavalue", "Year")]
ufil_n <- ulb_n[ , c("Month", "datavalue", "Year")]
ufil_p <- ulb_p[ , c("Month", "datavalue", "Year")]
ufil_sal <- ulb_sal[ , c("Month", "datavalue", "Year")]
ufil_temp <- ulb_temp[ , c("Month", "datavalue", "Year")]
ufil_tss <- ulb_tss[ , c("Month", "datavalue", "Year")]
bfil_sal <- bfil_sal[ , c("Month", "datavalue", "Year")]
bfil_temp <- bfil_temp[ , c("Month", "datavalue", "Year")]
gfil_n <- gfil_n[ , c("Month", "datavalue", "Year")]
ofil_chla <- ofil_chla[ , c("Month", "datavalue", "Year")]
sfil_chla <- sag_chla[ , c("Month", "datavalue", "Year")]
sfil_n <- sag_n[ , c("Month", "datavalue", "Year")]
View(cfil_sal)
View(bfil_sal)
cml_sal <- read.csv("./PREP/cml_salinity.csv", stringsAsFactors = TRUE)
bchn_sal<- read.csv("./PREP/bchn_salinity.csv", stringsAsFactors = TRUE)
cfil_sal <- cml_sal %>% filter(Year >= 2017)
bfil_sal <- bchn_sal %>% filter(Year >= 2017)
cfil_sal <- cfil_sal[ , c("Month", "datavalue", "Year")]
bfil_sal <- bfil_sal[ , c("Month", "datavalue", "Year")]
View(cml_sal)
cfil_sal$MoAb <- mymonths[ cfil_sal$Month ]
#Convert month number to month 3 letter abbreviation
mymonths <- c("Jan","Feb","Mar",
"Apr","May","Jun",
"Jul","Aug","Sep",
"Oct","Nov","Dec")
cfil_sal$MoAb <- mymonths[ cfil_sal$Month ]
bfil_sal$MoAb <- mymonths[ bfil_sal$Month ]
cfil_sal$MY <- paste(cfil_sal$MoAb, "-", cfil_sal$Year)
bfil_sal$MY <- paste(bfil_sal$MoAb, "-", bfil_sal$Year)
#Combining salinity dataframes
cavg_sal <- cfil_sal %>%
group_by(fct_inorder(MY)) %>%
summarize_at(c("datavalue"), mean, na.rm = TRUE)
View(cavg_sal)
bavg_sal <- bfil_sal %>%
group_by(fct_inorder(MY)) %>%
summarize_at(c("datavalue"), mean, na.rm = TRUE)
View(bavg_sal)
bavg_sal <- bavg_sal[-c(1:2), ]
View(bchn_sal)
View(bfil_sal)
bchn_temp <- read.csv("./PREP/bchn_temp.csv", stringsAsFactors = TRUE)
bfil_temp <- bchn_temp %>% filter(Year >= 2017)
bfil_temp <- bfil_temp[ , c("Month", "datavalue", "Year")]
bfil_temp$MoAb <- mymonths[ bfil_temp$Month ]
#Convert month number to month 3 letter abbreviation
mymonths <- c("Jan","Feb","Mar",
"Apr","May","Jun",
"Jul","Aug","Sep",
"Oct","Nov","Dec")
bfil_temp$MoAb <- mymonths[ bfil_temp$Month ]
bfil_temp$MY <- paste(bfil_temp$MoAb, "-", bfil_temp$Year)
bavg_temp <- bfil_temp %>%
group_by(fct_inorder(MY)) %>%
summarize_at(c("datavalue"), mean, na.rm = TRUE)
bavg_temp <- bavg_temp[-c(1:4), ]
View(bavg_temp)
