labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10),
labels = c("10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")) +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point() +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10),
labels = c("10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")) +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point() +
scale_y_discrete(breaks = c(1,2,3,4,5,6,7,8,9,10),
labels = c("10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%")) +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point() +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point() +
ylim(10, 20, 30, 40, 50, 60, 70, 80, 90, 100) +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point() +
scale_y_continuous(breaks=seq(10,100,10)) +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
as.numeric(perch$Percent)
perch <- as.numeric(perch$Percent)
perch <- read.csv("percentage_maxsum.csv" , stringsAsFactors = TRUE)
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point() +
scale_y_continuous(breaks=seq(1,100,10)) +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point() +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
#Finding percentage of sum that the max takes up and creating graph NO TABLE
maxch <- read.csv("maxch.csv", stringsAsFactors = TRUE)
sumch <- read.csv("sumch.csv", stringsAsFactors = TRUE)
smch <- cbind(sumch, maxch)
smch <- smch[, c('Year', 'Station', 'Species', 'Sum', 'Max')]
perch <- group_by(smch, Year, Station, Species) %>% mutate(Percent = Max/Sum)
perch$Percent <- percent(perch$Percent, accuracy=1)
#Finding percentage of sum that the max takes up and creating graph NO TABLE
maxch <- read.csv("maxch.csv", stringsAsFactors = TRUE)
sumch <- read.csv("sumch.csv", stringsAsFactors = TRUE)
smch <- cbind(sumch, maxch)
smch <- smch[, c('Year', 'Station', 'Species', 'Sum', 'Max')]
perch <- group_by(smch, Year, Station, Species) %>% mutate(Percent = Max/Sum)
View(perch)
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point(stat = "identity") +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point(stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
perch <- group_by(smch, Year, Station, Species) %>% mutate(Percent = Max/Sum)
write.csv(perch,'percentage_maxsum.csv', row.names = FALSE)
#How many times does they appear vs how many total samples there were
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
View(cml)
cml_count <- cml[ , c("Month", "Year", "Station", "Alex", "Large_PN", "Small_PN")]
hampton_count <- hampton[ , c("Month", "Year", "Station", "Alex", "Large_PN", "Small_PN")]
View(cml_count)
cml_count <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hampton_count <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
View(cml_count)
View(hampton_count)
cmlc <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hamptonc <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
#How many times does they appear vs how many total samples there were
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
cmlc <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hamptonc <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
View(cmlc)
library(lubridate)
c_count <- Records %>%
group_by(Year, Station) %>%
summarise(Count = n()) %>%
Ccount <- sum(with(cml_count,gender == "M"))
c_count <- Records %>%
group_by(Year, Station) %>%
summarise(Count = n()) %>%
#######################Nutrient Graph Begins Here#######################
##Poster Graph Nitrogen:Phosphorus
nutlong <- read.csv("CML_Nut_Long.csv" , stringsAsFactors = TRUE)
c_count <- cmlc %>%
group_by(Year, Station) %>%
summarise(Count = n()) %>%
#######################Nutrient Graph Begins Here#######################
##Poster Graph Nitrogen:Phosphorus
nutlong <- read.csv("CML_Nut_Long.csv" , stringsAsFactors = TRUE)
summarise(Count = n()
c_count <- cmlc %>%
group_by(Year, Station) %>%
summarise(Count = n())
c_count=cmlc %>%
group_by(Year, Station) %>%
summarise(Count = n())
View(c_count)
cmlc <- gather(cmlc, Species, Abundance, Alex, Large_PN, Small_PN)
View(cmlc)
hamptonc <- gather(hamptonc, Species, Abundance, Alex, Large_PN, Small_PN)
View(hamptonc)
c_count=cmlc %>%
group_by(Year, Species) %>%
summarise(Count = n())
View(c_count)
c_count=cmlc %>%
group_by(Species) %>%
summarise(Count = n())
c_count <- cmlc %>%
group_by(Year, Species) %>%
summarize_at(count = n())
c_count <- cmlc %>%
group_by(Year, Species) %>%
summarize(count = n())
c_count <- cmlc %>%
group_by(Year, Species) %>%
summarize(count = n(), na.rm = TRUE)
c_count <- cmlc %>%
group_by(Year, Species) %>%
summarize(count = n(na.rm=TRUE))
c_count <- cmlc %>%
group_by(Year, Species) %>%
summarize(count = n(), na.rm=TRUE)
View(hamptonc)
cmlc %>% drop_na()
cmlc <- cmlc %>% drop_na()
hamptonc <- hamptonc %>% drop_na()
c_count <- cmlc %>%
group_by(Year, Species) %>%
summarize(count = n())
View(c_count)
c_count <- cmlc %>% count(Year, Species)
View(c_count)
c_hampton <- hamptonc %>% count(Year, Species)
View(c_hampton)
h_count <- hamptonc %>% count(Year, Species)
#How many times does they appear vs how many total samples there were
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
cmlc <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hamptonc <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
cmlc <- gather(cmlc, Species, Abundance, Alex, Large_PN, Small_PN)
hamptonc <- gather(hamptonc, Species, Abundance, Alex, Large_PN, Small_PN)
cmlc <- cmlc %>% drop_na()
hamptonc <- hamptonc %>% drop_na()
c_count <- cmlc %>% count(Year, Species)
h_count <- hamptonc %>% count(Year, Species)
View(c_count)
View(h_count)
View(c_count)
#How many times does they appear vs how many total samples there were
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
cmlc <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hamptonc <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
cmlc <- gather(cmlc, Species, Abundance, Alex, Large_PN, Small_PN)
hamptonc <- gather(hamptonc, Species, Abundance, Alex, Large_PN, Small_PN)
cmlc <- cmlc %>% drop_na()
hamptonc <- hamptonc %>% drop_na()
c_total <- cmlc %>% count(Year, Species)
h_total <- hamptonc %>% count(Year, Species)
View(c_total)
View(h_total)
View(cmlc)
c_obs <- cmlc %>% count(Year, Species, Abundance > 0)
View(c_obs)
c_obs <- cmlc %>% count(Year, Species, Abundance > 0, na.rm = TRUE)
c_obs <- sum(cmlc$Abundance > 0, na.rm=TRUE)
c_obs <- cmlc %>% count(Year, Species, Abundance > 0)
View(c_obs)
c_total <- c_total[ , c("Year", "Species", "Total Obs")]
colnames(c_total)<- c("Year", "Species", "Total_obs")
colnames(h_total)<- c("Year", "Species", "Total_obs")
c_obs <- cmlc %>% count(Year, Species, Abundance > 0)
c_obs <- cmlc %>% count(Year, Species, Abundance > 0)
c_obs <- cmlc %>% count(Year, Species, Abundance > 0)
h_obs <- hamptonc %>% count(Year, Species, Abundance > 0)
View(h_obs)
View(hamptonc)
#Renaming columns
colnames(c_obs)<- c("Year", "Species", "Actual_obs")
View(c_obs)
#Counting only >0 observations
c_obs <- cmlc %>% count(Year, Species, Abundance > 0)
#Deleting false rows
c_obs[c_obs$`Abundance > 0` != "FALSE", ]
#Deleting false rows
c_obs <- c_obs[c_obs$`Abundance > 0` != "FALSE", ]
h_obs <- h_obs[h_obs$`Abundance > 0` != "FALSE", ]
#Keeping Specific columns
cmlc <- cml[ , c("Year", "Species", "n")]
#Keeping Specific columns
c_obs <- c_obs[ , c("Year", "Species", "n")]
h_obs <- h_obs[ , c("Year", "Species", "n")]
#Renaming n column
colnames(c_obs)<- c("Year", "Species", "Actual_obs")
colnames(h_obs)<- c("Year", "Species", "Actual_obs")
View(c_total)
View(h_total)
#Joining the dataframes
tobsch <- rbind(c_total, h_total)
View(tobsch)
View(cml)
View(cmlc)
View(c_total)
#Counting total observations
c_total <- cmlc %>% count(Year, Species, Station)
h_total <- hamptonc %>% count(Year, Species, Station)
#Renaming columns
colnames(c_total)<- c("Year", "Species", "Station", "Total_obs")
colnames(h_total)<- c("Year", "Species", "Station", "Total_obs")
View(c_obs)
View(c_total)
#Counting total observations
c_total <- cmlc %>% count(Year, Station, Species)
h_total <- hamptonc %>% count(Year, Station, Species)
View(h_total)
#Counting only >0 observations
c_obs <- cmlc %>% count(Year, Station, Species, Abundance > 0)
View(c_obs)
h_obs <- hamptonc %>% count(Year, Station, Species, Abundance > 0)
#Deleting false rows
c_obs <- c_obs[c_obs$`Abundance > 0` != "FALSE", ]
h_obs <- h_obs[h_obs$`Abundance > 0` != "FALSE", ]
#Keeping Specific columns
c_obs <- c_obs[ , c("Year", "Station", "Species", "n")]
h_obs <- h_obs[ , c("Year", "Station", "Species", "n")]
#Renaming n column
colnames(c_obs)<- c("Year", "Station", "Species", "Actual_obs")
colnames(h_obs)<- c("Year", "Station", "Species", "Actual_obs")
#Joining the dataframes
tobsch <- rbind(c_total, h_total)
aobsch <- rbind(c_obs, h_obs)
View(aobsch)
taobs <- tobsch %>% full_join(aobsch)
View(taobs)
#Renaming columns
colnames(c_total)<- c("Year", "Species", "Station", "Total_obs")
colnames(h_total)<- c("Year", "Species", "Station", "Total_obs")
View(c_total)
taobs <- tobsch %>% full_join(aobsch)
#How many times does they appear vs how many total samples there were
##Loading in basic dataframes
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
#column name change
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
#Keeping specific columns
cmlc <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hamptonc <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
#Turning into long data
cmlc <- gather(cmlc, Species, Abundance, Alex, Large_PN, Small_PN)
hamptonc <- gather(hamptonc, Species, Abundance, Alex, Large_PN, Small_PN)
#Dropping NA values
cmlc <- cmlc %>% drop_na()
hamptonc <- hamptonc %>% drop_na()
#Counting total observations
c_total <- cmlc %>% count(Year, Station, Species)
h_total <- hamptonc %>% count(Year, Station, Species)
#Renaming columns
colnames(c_total)<- c("Year", "Species", "Station", "Total_obs")
colnames(h_total)<- c("Year", "Species", "Station", "Total_obs")
#Counting only >0 observations
c_obs <- cmlc %>% count(Year, Station, Species, Abundance > 0)
h_obs <- hamptonc %>% count(Year, Station, Species, Abundance > 0)
#Deleting false rows
c_obs <- c_obs[c_obs$`Abundance > 0` != "FALSE", ]
h_obs <- h_obs[h_obs$`Abundance > 0` != "FALSE", ]
#Keeping Specific columns
c_obs <- c_obs[ , c("Year", "Station", "Species", "n")]
h_obs <- h_obs[ , c("Year", "Station", "Species", "n")]
#Renaming n column
colnames(c_obs)<- c("Year", "Station", "Species", "Actual_obs")
colnames(h_obs)<- c("Year", "Station", "Species", "Actual_obs")
#Joining the dataframes
tobsch <- rbind(c_total, h_total)
aobsch <- rbind(c_obs, h_obs)
taobs <- tobsch %>% full_join(aobsch)
#How many times does they appear vs how many total samples there were
##Loading in basic dataframes
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
#column name change
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
#Keeping specific columns
cmlc <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hamptonc <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
View(cmlc)
View(hamptonc)
#Turning into long data
cmlc <- gather(cmlc, Species, Abundance, Alex, Large_PN, Small_PN)
hamptonc <- gather(hamptonc, Species, Abundance, Alex, Large_PN, Small_PN)
#Dropping NA values
cmlc <- cmlc %>% drop_na()
hamptonc <- hamptonc %>% drop_na()
#Counting total observations
c_total <- cmlc %>% count(Year, Station, Species)
h_total <- hamptonc %>% count(Year, Station, Species)
View(c_total)
View(h_total)
#Renaming columns
colnames(c_total)<- c("Year", "Species", "Station", "Total_obs")
colnames(h_total)<- c("Year", "Species", "Station", "Total_obs")
#Counting only >0 observations
c_obs <- cmlc %>% count(Year, Station, Species, Abundance > 0)
h_obs <- hamptonc %>% count(Year, Station, Species, Abundance > 0)
View(c_obs)
View(h_obs)
#Deleting false rows
c_obs <- c_obs[c_obs$`Abundance > 0` != "FALSE", ]
h_obs <- h_obs[h_obs$`Abundance > 0` != "FALSE", ]
#Keeping Specific columns
c_obs <- c_obs[ , c("Year", "Station", "Species", "n")]
h_obs <- h_obs[ , c("Year", "Station", "Species", "n")]
#Renaming n column
colnames(c_obs)<- c("Year", "Station", "Species", "Actual_obs")
colnames(h_obs)<- c("Year", "Station", "Species", "Actual_obs")
#Joining the dataframes
tobsch <- rbind(c_total, h_total)
View(tobsch)
aobsch <- rbind(c_obs, h_obs)
View(aobsch)
taobs <- tobsch %>% full_join(aobsch)
View(taobs)
taobs <- merge(tobsch, aobsch, by=c("Year","Station", "Species"))
taobs <- merge(tobsch, aobsch, by=c("Year", "Species"))
taobs <- merge(tobsch, aobsch, by=c("Year", "Species"))
taobs <- tobsch %>% full_join(aobsch)
View(taobs)
taobs <- cbind(tobsch, aobsch)
View(tobsch)
tobsch <- tobsch[-c(16), ]
taobs <- cbind(tobsch, aobsch)
View(taobs)
#Keeping specific columns
taobs <- taobs[ , c("Year", "Species", "Station", "Total_obs", "Actual_obs")]
colnames(taobs) <- c("Year", "Station", "Species", "Total_obs", "Actual_obs")
View(tobsch)
View(aobsch)
View(tobsch)
View(taobs)
write.csv(taobs, "to_ac_obs.csv", row.names = FALSE)
taobs <- read.csv("to_ac_obs" , stringsAsFactors = TRUE)
#How many times does they appear vs how many total samples there were
##Loading in basic dataframes
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
#column name change
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
#Keeping specific columns
cmlc <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hamptonc <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
#Turning into long data
cmlc <- gather(cmlc, Species, Abundance, Alex, Large_PN, Small_PN)
hamptonc <- gather(hamptonc, Species, Abundance, Alex, Large_PN, Small_PN)
#Dropping NA values
cmlc <- cmlc %>% drop_na()
hamptonc <- hamptonc %>% drop_na()
#Counting total observations
c_total <- cmlc %>% count(Year, Station, Species)
h_total <- hamptonc %>% count(Year, Station, Species)
#Renaming columns
colnames(c_total)<- c("Year", "Species", "Station", "Total_obs")
colnames(h_total)<- c("Year", "Species", "Station", "Total_obs")
#Counting only >0 observations
c_obs <- cmlc %>% count(Year, Station, Species, Abundance > 0)
h_obs <- hamptonc %>% count(Year, Station, Species, Abundance > 0)
#Deleting false rows
c_obs <- c_obs[c_obs$`Abundance > 0` != "FALSE", ]
h_obs <- h_obs[h_obs$`Abundance > 0` != "FALSE", ]
#Keeping Specific columns
c_obs <- c_obs[ , c("Year", "Station", "Species", "n")]
h_obs <- h_obs[ , c("Year", "Station", "Species", "n")]
#Renaming n column
colnames(c_obs)<- c("Year", "Station", "Species", "Actual_obs")
colnames(h_obs)<- c("Year", "Station", "Species", "Actual_obs")
#Joining the dataframes
tobsch <- rbind(c_total, h_total)
tobsch <- tobsch[-c(16), ]
aobsch <- rbind(c_obs, h_obs)
taobs <- cbind(tobsch, aobsch)
#Keeping specific columns and renaming
taobs <- taobs[ , c("Year", "Species", "Station", "Total_obs", "Actual_obs")]
colnames(taobs) <- c("Year", "Station", "Species", "Total_obs", "Actual_obs")
write.csv(taobs, "to_ac_obs.csv", row.names = FALSE)
View(taobs)
write.csv(taobs, "to_ac_obs.csv", row.names = FALSE)
taobs <- read.csv("to_ac_obs.csv" , stringsAsFactors = TRUE)
View(taobs)
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(tidyverse)
library(ggtext)
library(ggpubr)
library(formattable)
library(scales)
library(lubridate)
taobs <- read.csv("to_ac_obs.csv" , stringsAsFactors = TRUE)
setwd("D:/R/phyto-thesis")
View(taobs)
ptaobs <- group_by(taobs, Year, Station, Species) %>% mutate(Percent = Actual_obs/Total_obs)
View(ptaobs)
ggplot(data = ptaobs, aes(x= Year, y = Percent)) +
geom_point(stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = ptaobs, aes(x= Year, y = Percent)) +
geom_point(stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Percentage actual of total observations")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = ptaobs, aes(x= Year, y = Percent)) +
geom_point(stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Percentage times observed of total samples")+
facet_grid(rows = vars(Species), cols = vars(Station))
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
sumch <- read.csv("sumch.csv", stringsAsFactors = TRUE)
ggplot(sumch, aes(x = Year, y = Sum))  +
geom_point(aes(fill = factor(Species)), size = 3, shape = 21) +
scale_fill_manual(values = c("#440154FF", "#1F968BFF", "#FDE725FF")) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
labs(x = "Year", y = "Log Max Abundance (Cells/l)", fill = "Species") +
facet_grid(cols = vars(Station))
ggplot(sumch, aes(x = Year, y = Sum))  +
geom_point(aes(fill = factor(Species)), size = 3, shape = 21) +
scale_fill_manual(values = c("#440154FF", "#1F968BFF", "#FDE725FF")) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab('Year')+
ylab(bquote('Log max abundance '(cells~L^-1))) +
facet_grid(cols = vars(Station))
ggplot(sumch, aes(x = Year, y = Sum))  +
geom_point(aes(fill = factor(Species)), size = 3, shape = 21) +
scale_fill_manual(values = c("#440154FF", "#1F968BFF", "#FDE725FF")) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
labs(fill = "Species") +
xlab('Year')+
ylab(bquote('Log max abundance '(cells~L^-1))) +
facet_grid(cols = vars(Station))
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station))
perch <- read.csv("percentage_maxsum.csv" , stringsAsFactors = TRUE)
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point(size = 3, stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = ptaobs, aes(x= Year, y = Percent)) +
geom_point(size = 3, stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Percentage times observed of total samples")+
facet_grid(rows = vars(Species), cols = vars(Station))
write.csv(ptaobs, "percent_ta_obs.csv", row.names = FALSE)
