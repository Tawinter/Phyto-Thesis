plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
```
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
head(mpg)
library(ggplot)
data(mpg)
head(mpg)
tail (mpg)
#What is fl?
table(mpg$fl)
#highway miles per gallon
hist(mpg$hwy)
# using with makes graph annotations cleaner
par(mfrow=c(1,2))
with(mpg,hist(hwy))
#Inserting a title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal",cex.main=.7,xlab=highway mpg))
#Inserting a title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal",cex.main=.7,xlab="highway mpg"))
boxplot(mpg$hwy,main = "highway mileage")
library(MASS)
data(cars93)
head(cars93)
library(MASS)
data(cars93)
head(cars93)
library(MASS)
data(cars93)
library(cars93)
library(MASS)
data("Cars93")
head(Cars93)
dim(Cars93)
attach(Cars93)
hist(mpg.highway,xlab="miles per us gallon", main="histogram")
hist(MPG.highway,xlab="Miles per US Gallon", main="Histogram")
show_col(hue_pal()(4)) ggplot2_color_codes_level_4_from_scales
setwd("D:/R/phyto-thesis")
library(ggplot2)
library(tinytex)
library(dplyr)
library(tidyr)
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
#Sum the large and small PN values and create a new column in the same dataframe
cml <- cml %>% rowwise() %>%
mutate(PnTotal = sum(c_across(Large_PN:Small_PN)))
hampton <- hampton %>% rowwise() %>%
mutate(PnTotal = sum(c_across(Large_PN:Small_PN)))
View(cml)
library(ggplot2)
library(tinytex)
library(dplyr)
library(tidyr)
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
size_cml <- cml[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
View(size_cml)
size_cml <- gather(cml, Class, Abundance, Large_PN:Small_PN, factor_key=TRUE)
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
View(cml)
size_cml <- cml[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
View(size_cml)
size_cml <- gather(size_cml, Class, Abundance, Large_PN:Small_PN, factor_key=TRUE)
size_hampton <- hampton[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
size_hampton <- gather(size_hampton, Class, Abundance, Large_PN:Small_PN, factor_key=TRUE)
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml, aes(x = Week, y = Abundance))+
geom_col(aes(fill = Class))
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml, aes(x = Week, y = Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml[which(size_cml$Abundance>0),], aes(x = Week, y = Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml[which(size_cml$Abundance>0),], aes(x = Week, y = Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
size_cml <- cml[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
size_hampton <- hampton[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
View(size_cml)
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Month) %>%
summarize_at(c("Large_PN", "Small_PN"), mean, na.rm = TRUE)
View(size_cml_1)
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), mean, na.rm = TRUE)
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), average, na.rm = TRUE)
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), mean, na.rm = TRUE)
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), sum, na.rm = TRUE)
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
size_cml <- cml[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
size_hampton <- hampton[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), sum, na.rm = TRUE)
size_hampton_1 <- size_hampton %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), sum, na.rm = TRUE)
#Turn into long data
size_cml_1 <- gather(size_cml_1, Class, Sum_Abundance, Large_PN:Small_PN, factor_key=TRUE)
size_hampton_1 <- gather(size_hampton_1, Class, Sum_Abundance, Large_PN:Small_PN, factor_key=TRUE)
View(size_cml_1)
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Week, y = Abundance))+
geom_col(aes(fill = Class)) +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Week, y = Sum_Abundance))+
geom_col(aes(fill = Month)) +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Month)) +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_cml$Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_cml_1$Sum_Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_cml_1$Sum_Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
ggplot(size_hampton_1[which(size_hampton_1$Sum_Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_cml_1$Sum_Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_hampton_1$Sum_Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_cml_1$Sum_Abundance>0),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1[which(size_cml_1$Year== 2017),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Log Total Abundance (Cells/l)")
ggplot(size_hampton_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Log Total Abundance (Cells/l)")
ggplot(size_hampton_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Log Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2017),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
theme_classic()
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Log Total Abundance (Cells/l)")
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_hampton_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2017),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2017),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2017),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2018),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2019),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2020),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2021),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2017),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2018),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2019),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2020),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_cml_1[which(size_cml_1$Year== 2021),], aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
library(ggplot2)
library(tinytex)
library(dplyr)
library(tidyr)
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
size_cml <- cml[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
size_hampton <- hampton[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), sum, na.rm = TRUE)
size_hampton_1 <- size_hampton %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), sum, na.rm = TRUE)
View(size_cml_1)
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
ggplot(size_hampton_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
size_cml <- cml[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
size_hampton <- hampton[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
#Get the average per month ad create new column
size_cml_1 <- size_cml %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), sum, na.rm = TRUE)
size_hampton_1 <- size_hampton %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), sum, na.rm = TRUE)
View(size_cml_1)
#Turn into long data
size_cml_1 <- gather(size_cml_1, Class, Sum_Abundance, Large_PN:Small_PN, factor_key=TRUE)
size_hampton_1 <- gather(size_hampton_1, Class, Sum_Abundance, Large_PN:Small_PN, factor_key=TRUE)
View(size_cml_1)
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(ggplot2)
library(tinytex)
library(dplyr)
library(tidyr)
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN",
"Chlorophyl", "PAR", "Temp", "Salinity")
size_cml <- cml[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
size_hampton <- hampton[ , c("Week", "Date", "Month", "Day", "Year", "Station", "Large_PN", "Small_PN")]
size_cml_1 <- size_cml %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), sum, na.rm = TRUE)
size_hampton_1 <- size_hampton %>%
group_by(Year, Month) %>%
summarize_at(c("Large_PN", "Small_PN"), sum, na.rm = TRUE)
size_cml_1 <- gather(size_cml_1, Class, Sum_Abundance, Large_PN:Small_PN, factor_key=TRUE)
size_hampton_1 <- gather(size_hampton_1, Class, Sum_Abundance, Large_PN:Small_PN,
factor_key=TRUE)
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class, position = 'fill')) +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(fill = Class, x = Month, y = Sum_Abundance))+
geom_bar(position = "fill", stat = "identity") +
scale_y_log10() +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
scale_y_log10() +
geom_text(aes(label = scales::percent(pct))) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
#Graphs: using weekly data, area chart, plot totals and then each size class
ggplot(size_cml_1, aes(x = Month, y = Sum_Abundance))+
geom_col(aes(fill = Class)) +
geom_text(aes(label = scales::percent(pct)),
position="stack",vjust=+2.1,col="firebrick",size=3) +
scale_y_log10(label = scales::percent) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D")) +
theme_classic() +
labs(x = "Month", y = "Total Abundance (Cells/l)")
View(size_cml_1)
#Adding in percentages
size_cml_pct <- size_cml_1 %>%
group_by(Year, Month) %>%
summarise(Sum_Abundance = n()) %>%
mutate(freq = formattable::percent(Sum_Abundance / sum(Sum_Abundance)))
install.packages("formattable")
library(formattable)
#Adding in percentages
size_cml_pct <- size_cml_1 %>%
group_by(Year, Month) %>%
summarise(Sum_Abundance = n()) %>%
mutate(freq = formattable::percent(Sum_Abundance / sum(Sum_Abundance)))
View(size_cml_pct)
#Adding in percentages
size_cml_pct <- size_cml_1 %>%
group_by(Month, Year) %>%
summarise(Sum_Abundance = n()) %>%
mutate(freq = formattable::percent(Sum_Abundance / sum(Sum_Abundance)))
size_cml_pct <- size_cml_1 %>%
group_by(Year, Month) %>%
summarise(Sum_Abundance = n()) %>%
mutate(freq = round(Sum_Abundance / sum(Sum_Abundance), 3))
size_cml_pct <- size_cml_1 %>%
group_by(Year, Month) %>%
mutate(freq = round(Sum_Abundance / sum(Sum_Abundance), 3))
View(size_cml_1)
size_cml_pct <- size_cml_1 %>%
group_by(Year, Month) %>%
mutate(freq = formattable::percent(Sum_Abundance / sum(Sum_Abundance)))
#Adding in percentages
size_cml_pct <- size_cml_1 %>%
group_by(Year, Month) %>%
mutate(freq = formattable::percent(Sum_Abundance / sum(Sum_Abundance)))
size_hampton_pct <- size_hampton_1 %>%
group_by(Year, Month) %>%
mutate(freq = formattable::percent(Sum_Abundance / sum(Sum_Abundance)))
View(size_hampton_pct)
