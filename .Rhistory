table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
---
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
### Summarizing with Tables and Graphs
* What is fl?
* Examine hwy  (highway mileage)
* Histogram
* Frequency Table / Bar Graphs
* Scatterplot
* Boxplot,  Conditioning Plot
```{r Summarizing and Graphing Part 1 }
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
```
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
hist(mpg$hwy, main="highway fuel efficiency in miles/gal", xlab="highway mpg")
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
detach(mpg)
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
---
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
### Summarizing with Tables and Graphs
* What is fl?
* Examine hwy  (highway mileage)
* Histogram
* Frequency Table / Bar Graphs
* Scatterplot
* Boxplot,  Conditioning Plot
```{r Summarizing and Graphing Part 1 }
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
detach(mpg)
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
hist(mpg$hwy, main="highway fuel efficiency in miles/gal", xlab="highway mpg")
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
```
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
boxplot(hwy~year,data = mpg)  #  better
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
Boxplot
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
---
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
### Summarizing with Tables and Graphs
* What is fl?
* Examine hwy  (highway mileage)
* Histogram
* Frequency Table / Bar Graphs
* Scatterplot
* Boxplot,  Conditioning Plot
```{r Summarizing and Graphing Part 1 }
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
detach(mpg)
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
hist(mpg$hwy, main="highway fuel efficiency in miles/gal", xlab="highway mpg")
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
```
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
head(mpg)
library(ggplot)
data(mpg)
head(mpg)
tail (mpg)
#What is fl?
table(mpg$fl)
#highway miles per gallon
hist(mpg$hwy)
# using with makes graph annotations cleaner
par(mfrow=c(1,2))
with(mpg,hist(hwy))
#Inserting a title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal",cex.main=.7,xlab=highway mpg))
#Inserting a title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal",cex.main=.7,xlab="highway mpg"))
boxplot(mpg$hwy,main = "highway mileage")
library(MASS)
data(cars93)
head(cars93)
library(MASS)
data(cars93)
head(cars93)
library(MASS)
data(cars93)
library(cars93)
library(MASS)
data("Cars93")
head(Cars93)
dim(Cars93)
attach(Cars93)
hist(mpg.highway,xlab="miles per us gallon", main="histogram")
hist(MPG.highway,xlab="Miles per US Gallon", main="Histogram")
show_col(hue_pal()(4)) ggplot2_color_codes_level_4_from_scales
#Grapphing packages
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(tidyverse)
library(ggtext)
library(ggpubr)
library(formattable)
library(scales)
library(lubridate)
library(lemon)
library(viridis)
#Finding percentage of sum that the max takes up and creating graph NO TABLE
maxch <- read.csv("maxch.csv", stringsAsFactors = TRUE)
setwd("C:/phyto-thesis")
#Finding percentage of sum that the max takes up and creating graph NO TABLE
maxch <- read.csv("maxch.csv", stringsAsFactors = TRUE)
sumch <- read.csv("sumch.csv", stringsAsFactors = TRUE)
smch <- cbind(sumch, maxch)
smch <- smch[, c('Year', 'Station', 'Species', 'Sum', 'Max')]
View(maxch)
View(sumch)
perch <- group_by(smch, Year, Station, Species) %>% mutate(Percent = Max/Sum)
View(perch)
write.csv(perch,'percentage_maxsum.csv', row.names = FALSE)
perch <- read.csv("percentage_maxsum.csv" , stringsAsFactors = TRUE)
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point(size = 3, stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
View(perch)
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point(size = 3, stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Max Abundance of the Annual Sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
#How many times does they appear vs how many total samples there were
##Loading in basic dataframes
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
#column name change
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
#Keeping specific columns
cmlc <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hamptonc <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
#Turning into long data
cmlc <- gather(cmlc, Species, Abundance, Alex, Large_PN, Small_PN)
hamptonc <- gather(hamptonc, Species, Abundance, Alex, Large_PN, Small_PN)
#Dropping NA values
cmlc <- cmlc %>% drop_na()
hamptonc <- hamptonc %>% drop_na()
#Counting total observations
c_total <- cmlc %>% count(Year, Station, Species)
h_total <- hamptonc %>% count(Year, Station, Species)
#Renaming columns
colnames(c_total)<- c("Year", "Species", "Station", "Total_obs")
colnames(h_total)<- c("Year", "Species", "Station", "Total_obs")
#Counting only >0 observations
c_obs <- cmlc %>% count(Year, Station, Species, Abundance > 0)
h_obs <- hamptonc %>% count(Year, Station, Species, Abundance > 0)
#Deleting false rows
c_obs <- c_obs[c_obs$`Abundance > 0` != "FALSE", ]
h_obs <- h_obs[h_obs$`Abundance > 0` != "FALSE", ]
#Keeping Specific columns
c_obs <- c_obs[ , c("Year", "Station", "Species", "n")]
h_obs <- h_obs[ , c("Year", "Station", "Species", "n")]
#Renaming n column
colnames(c_obs)<- c("Year", "Station", "Species", "Actual_obs")
colnames(h_obs)<- c("Year", "Station", "Species", "Actual_obs")
#Joining the dataframes
tobsch <- rbind(c_total, h_total)
tobsch <- tobsch[-c(16), ]
aobsch <- rbind(c_obs, h_obs)
taobs <- cbind(tobsch, aobsch)
#How many times does they appear vs how many total samples there were
##Loading in basic dataframes
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
#column name change
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
#Keeping specific columns
cmlc <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hamptonc <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
#Turning into long data
cmlc <- gather(cmlc, Species, Abundance, Alex, Large_PN, Small_PN)
hamptonc <- gather(hamptonc, Species, Abundance, Alex, Large_PN, Small_PN)
#Dropping NA values
cmlc <- cmlc %>% drop_na()
hamptonc <- hamptonc %>% drop_na()
#Counting total observations
c_total <- cmlc %>% count(Year, Station, Species)
h_total <- hamptonc %>% count(Year, Station, Species)
View(c_total)
View(h_total)
#Renaming columns
colnames(c_total)<- c("Year", "Species", "Station", "Total_obs")
colnames(h_total)<- c("Year", "Species", "Station", "Total_obs")
#Counting only >0 observations
c_obs <- cmlc %>% count(Year, Station, Species, Abundance > 0)
h_obs <- hamptonc %>% count(Year, Station, Species, Abundance > 0)
View(c_obs)
#How many times does they appear vs how many total samples there were
##Loading in basic dataframes
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
View(cml)
#column name change
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
#Keeping specific columns
cmlc <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hamptonc <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
View(cmlc)
#Turning into long data
cmlc <- gather(cmlc, Species, Abundance, Alex, Large_PN, Small_PN)
hamptonc <- gather(hamptonc, Species, Abundance, Alex, Large_PN, Small_PN)
#Dropping NA values
cmlc <- cmlc %>% drop_na()
hamptonc <- hamptonc %>% drop_na()
#Counting total observations
c_total <- cmlc %>% count(Year, Station, Species)
h_total <- hamptonc %>% count(Year, Station, Species)
View(c_total)
#Renaming columns
colnames(c_total)<- c("Year", "Species", "Station", "Total_obs")
colnames(h_total)<- c("Year", "Species", "Station", "Total_obs")
#Counting only >0 observations
c_obs <- cmlc %>% count(Year, Station, Species, Abundance > 0)
h_obs <- hamptonc %>% count(Year, Station, Species, Abundance > 0)
View(c_obs)
#Deleting false rows
c_obs <- c_obs[c_obs$`Abundance > 0` != "FALSE", ]
h_obs <- h_obs[h_obs$`Abundance > 0` != "FALSE", ]
#Keeping Specific columns
c_obs <- c_obs[ , c("Year", "Station", "Species", "n")]
h_obs <- h_obs[ , c("Year", "Station", "Species", "n")]
#Renaming n column
colnames(c_obs)<- c("Year", "Station", "Species", "Actual_obs")
colnames(h_obs)<- c("Year", "Station", "Species", "Actual_obs")
#Joining the dataframes
tobsch <- rbind(c_total, h_total)
tobsch <- tobsch[-c(16), ]
#How many times does they appear vs how many total samples there were
##Loading in basic dataframes
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
#column name change
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
#Keeping specific columns
cmlc <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hamptonc <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
#Turning into long data
cmlc <- gather(cmlc, Species, Abundance, Alex, Large_PN, Small_PN)
hamptonc <- gather(hamptonc, Species, Abundance, Alex, Large_PN, Small_PN)
#Dropping NA values
cmlc <- cmlc %>% drop_na()
hamptonc <- hamptonc %>% drop_na()
#Counting total samplings
c_total <- cmlc %>% count(Year, Station, Species)
h_total <- hamptonc %>% count(Year, Station, Species)
#Renaming columns
colnames(c_total)<- c("Year", "Species", "Station", "Total_obs")
colnames(h_total)<- c("Year", "Species", "Station", "Total_obs")
#Counting only >0 observations
c_obs <- cmlc %>% count(Year, Station, Species, Abundance > 0)
h_obs <- hamptonc %>% count(Year, Station, Species, Abundance > 0)
#Deleting false rows
c_obs <- c_obs[c_obs$`Abundance > 0` != "FALSE", ]
h_obs <- h_obs[h_obs$`Abundance > 0` != "FALSE", ]
#Keeping Specific columns
c_obs <- c_obs[ , c("Year", "Station", "Species", "n")]
h_obs <- h_obs[ , c("Year", "Station", "Species", "n")]
#Renaming n column
colnames(c_obs)<- c("Year", "Station", "Species", "Actual_obs")
colnames(h_obs)<- c("Year", "Station", "Species", "Actual_obs")
#Joining the dataframes
tobsch <- rbind(c_total, h_total)
View(tobsch)
View(h_total)
View(c_total)
#Joining the dataframes
tobsch <- rbind(c_total, h_total)
View(tobsch)
aobsch <- rbind(c_obs, h_obs)
View(aobsch)
taobs <- cbind(tobsch, aobsch)
View(taobs)
#Keeping specific columns and renaming
taobs <- taobs[ , c("Year", "Species", "Station", "Total_obs", "Actual_obs")]
colnames(taobs) <- c("Year", "Station", "Species", "Total_obs", "Actual_obs")
write.csv(taobs, "to_ac_obs.csv", row.names = FALSE)
taobs <- read.csv("to_ac_obs.csv" , stringsAsFactors = TRUE)
ptaobs <- group_by(taobs, Year, Station, Species) %>% mutate(Percent = Actual_obs/Total_obs)
View(ptaobs)
write.csv(ptaobs, "percent_ta_obs.csv", row.names = FALSE)
ggplot(data = ptaobs, aes(x= Year, y = Percent)) +
geom_point(size = 3, stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Percentage times observed of total samples")+
facet_grid(rows = vars(Species), cols = vars(Station))
