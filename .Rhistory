library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(tidyverse)
library(ggtext)
library(ggpubr)
library(formattable)
library(scales)
library(lubridate)
library(nlme)
library(lemon)
library(DescTools)
library(viridis)
library(mblm)
#Data frame corrections and manipulations
nutlong <- read.csv("CML_Nut_Long.csv" , stringsAsFactors = TRUE)
setwd("C:/phyto-thesis")
#Data frame corrections and manipulations
nutlong <- read.csv("CML_Nut_Long.csv" , stringsAsFactors = TRUE)
View(nutlong)
#Graphing against nitrogen
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = nitrogen, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_x_continuous(limits = c(0, 0.16), breaks = seq(0, 0.16, 0.02)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
theme_bw() +
xlab(bquote('Nitrogen ' ~(mg~L^-1)))+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
#Graphing against nitrogen
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = nitrogen, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
theme_bw() +
xlab(bquote('Nitrogen ' ~(mg~L^-1)))+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
#Graphing against nitrogen
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = nitrogen, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_x_continuous(limits = c(0, 0.16), breaks = seq(0, 0.16, 0.02)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
theme_bw() +
xlab(bquote('Nitrogen ' ~(mg~L^-1)))+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
##Poster Graph Nitrogen:Phosphorus
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = N.P, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
theme_bw() +
xlab('Nitrogen:Phosphorus')+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
##Poster Graph Nitrogen:Phosphorus
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = N.P, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_x_continuous(limits = c(0, 8), breaks = seq(0,8,1)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
theme_bw() +
xlab('Nitrogen:Phosphorus')+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
#Graphing against tss
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = tss, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_x_continuous(limits = c(10, 24), breaks = seq(10,24,2)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
theme_bw() +
xlab(bquote('Total suspended solids ' ~(mg~L^-1)))+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
#Graphing against tss
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = tss, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
theme_bw() +
xlab(bquote('Total suspended solids ' ~(mg~L^-1)))+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
#Graphing against tss
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = tss, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_x_continuous(limits = c(10, 24), breaks = seq(10,24,2)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
theme_bw() +
xlab(bquote('Total suspended solids ' ~(mg~L^-1)))+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
#Graphing against chla
blab <- expression('Chlorophyll a (' *mu*g/l*')')
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = chla, y = abundance.avg)) +
geom_point(size = 2.5, shape =21, aes(fill = Year)) +
scale_x_continuous(limits = c(0,20), breaks = seq(0,20,2)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
theme_bw() +
xlab(bquote('Chlorophyll ' ~(mu*L^-1)))+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = chla, y = abundance.avg)) +
geom_point(size = 2.5, shape =21, aes(fill = Year)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
theme_bw() +
xlab(bquote('Chlorophyll ' ~(mu*L^-1)))+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
scale_x_continuous(limits = c(0,20), breaks = seq(0,20,2)) +
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = chla, y = abundance.avg)) +
geom_point(size = 2.5, shape =21, aes(fill = Year)) +
scale_x_continuous(limits = c(0,20), breaks = seq(0,20,2)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
theme_bw() +
xlab(bquote('Chlorophyll ' ~(mu*L^-1)))+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = chla, y = abundance.avg)) +
geom_point(size = 2.5, shape =21, aes(fill = Year)) +
scale_x_continuous(limits = c(0,20), breaks = seq(0,20,2)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
theme_bw() +
xlab(bquote('Chlorophyll ' ~(mu*L^-1)))+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
#Testing variables for normality for PLS analysis
hist(nutlong$phosphorus)
hist(nutlong$tss)
hist(nutlong$chla)
hist(nutlong$nitrogen)
hist(nutlong$salinity)
hist(nutlong$temperature)
hist(nutlong$N.P)
hist(nutlong$abundance.avg)
#Performing the PLs
install.packages("pls")
library(pls)
set.seed(1)
pcml <- plsr(abundance.avg~temperature+salinity+nitrogen+phosphorus+N.P+tss+chla,
data=nutlong, scale=TRUE, validation="CV")
View(pcml)
summary(pcml)
#visualizing results
validationplot(pcml)
validationplot(pcml, val.type="MSEP")
validationplot(pcml, val.type="R2")
#visualizing results
validationplot(pcml)
validationplot(pcml, val.type="MSEP")
validationplot(pcml, val.type="R2")
#Taking the log of data to fix skews
nutlong <- read.csv("CML_Nut_Long.csv" , stringsAsFactors = TRUE)
#Taking the log of data to fix skews
nuts <- read.csv("CML_Nut_Long.csv" , stringsAsFactors = TRUE)
nutslog <- log1p(nuts)
View(nuts)
alexnut <- nuts[ which(nuts$species.avg=='Alex', ]
alexnut <- nuts[ which(nuts$species.avg=='Alex',) ]
alexnut <- subset(nuts, species.avg == 'Alex',
select=c(phosphorus, tss, chla, nitrogen, salinity, temperature,
N.P, abundance.avg))
View(alexnut)
alexnut <- alexut[-c(58,59), ]
alexnut <- alexnut[-c(58,59), ]
#Small_PN
smallnut <- subset(nuts, species.avg == 'Small_PN',
select=c(phosphorus, tss, chla, nitrogen, salinity, temperature,
N.P, abundance.avg))
View(smallnut)
smallnut <- smallnut[-c(176,177), ] #removed since NA for abundance data
smallnut <- smallnut[-c(176,177), ]
smallnut <- smallnut[-c(176,177), ]
smallnut <- smallnut[-c(176,177),]
smallnut <- smallnut[-c(58,59),]
#Large_PN
largenut <- subset(nuts, species.avg == 'Large_PN',
select=c(phosphorus, tss, chla, nitrogen, salinity, temperature,
N.P, abundance.avg))
View(largenut)
largenut <- largenut[-c(58,59),]
#Taking the log of data to fix skews
alexlog <- log1p(alexnut)
View(alexlog)
hist(alexlog$phosphorus)
hist(alexlog$tss)
hist(alexlog$chla)
hist(alexlog$nitrogen)
hist(alexlog$salinity)
hist(alexlog$temperature)
hist(alexlog$N.P)
hist(alexlog$abundance.avg)
#Taking the log of data and checking skews for small PN
smalllog <- log1p(smallnut)
hist(smalllog$phosphorus)
hist(smalllog$tss)
hist(smalllog$chla)
hist(smalllog$nitrogen)
hist(smalllog$salinity)
hist(smalllog$temperature)
hist(smalllog$N.P)
hist(smalllog$abundance.avg)
#Taking the log of the data and checking skews for large PN
largelog <- log1p(largenut)
hist(largelog$phosphorus)
hist(largelog$tss)
hist(largelog$chla)
hist(largelog$nitrogen)
hist(largelog$salinity)
hist(largelog$temperature)
hist(largelog$N.P)
hist(largelog$abundance.avg)
#Performing the PLs
set.seed(1)
plsalex <- plsr(abundance.avg~temperature+salinity+nitrogen+phosphorus+N.P+tss+chla,
data=alexlog, scale=TRUE, validation="CV")
summary(plsalex)
?plsr
#Performing the PLs
set.seed(10)
plsalex <- plsr(abundance.avg~temperature+salinity+nitrogen+phosphorus+N.P+tss+chla,
na.action = na.omit, data=alexlog, scale=TRUE, validation="LOOCV")
plsalex <- plsr(abundance.avg~temperature+salinity+nitrogen+phosphorus+N.P+tss+chla,
na.action = na.omit, data=alexlog, scale=TRUE, validation="LOO")
summary(plsalex)
validationplot(plsalex)
validationplot(plsalex, val.type="MSEP")
validationplot(plsalex, val.type="R2")
plsSmall <- plsr(abundance.avg~temperature+salinity+nitrogen+phosphorus+N.P+tss+chla,
na.action = na.omit, data=smalllog, scale=TRUE, validation="LOO")
summary(plsSmall)
validationplot(plsSmall)
validationplot(plsSmall, val.type="MSEP")
validationplot(plsSmall, val.type="R2")
plslarge <- plsr(abundance.avg~temperature+salinity+nitrogen+phosphorus+N.P+tss+chla,
na.action = na.omit, data=largelog, scale=TRUE, validation="LOO")
summary(plslarge)
validationplot(plslarge)
validationplot(plslarge, val.type="MSEP")
validationplot(plslarge, val.type="R2")
#Non-parametric test
install.packages("plsRglm")
library(plsRglm)
?plsRglm
xalex<-alexlog[,1:7]
yalex<-alexlogl[,8]
yalex<-alexlogl[,8]
yalex<-alexlog[,8]
Xalex<-alexlog[,1:7]
plsRglmmodel.default(yalex, xalex)
plsRglmmodel.default(yalex, xalex, nt = 7)
plsRglmmodel.default(yalex, xalex, nt = 7, modele = 'pls')
plsRglmmodel.default(yalex, xalex, nt = 7, dataPredictY = xalex, modele = 'pls')
plsRglmmodel.default(alexlog, yalex, xalex, nt = 7, dataPredictY = xalex, modele = 'pls', familiy = NULL,
)
plsRglmmodel.default(alexlog, yalex, xalex, nt = 7, dataPredictY = xalex, modele = 'pls')
plsRglmmodel.default(alexlog, yalex, xalex, nt = 7, modele = 'pls')
plsRglmmodel.default(alexlog)
nPlsAlex <- plsRglm(yalex, xalex, 10, modele = 'pls')
summary(nPlsAlex)
View(nPlsAlex)
nPlsAlex <- plsRglm(yalex, xalex, 10, modele = 'pls-glm-gaussian')
nPlsAlex <- plsRglm(yalex, xalex, 10)
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(tidyverse)
library(ggtext)
library(ggpubr)
library(formattable)
library(scales)
library(lubridate)
library(nlme)
library(lemon)
library(DescTools)
library(viridis)
library(mblm)
install.packages('mblm')
install.packages('pls')
library(mblm)
library(pls)
#Separating into a file for each species
nuts <- read.csv("CML_Nut_Long.csv" , stringsAsFactors = TRUE)
#Alex
alexnut <- subset(nuts, species.avg == 'Alex',
select=c(phosphorus, tss, chla, nitrogen, salinity, temperature,
N.P, abundance.avg))
alexnut <- alexnut[-c(58,59), ] #removed since NA for abundance data
#Small_PN
smallnut <- subset(nuts, species.avg == 'Small_PN',
select=c(phosphorus, tss, chla, nitrogen, salinity, temperature,
N.P, abundance.avg))
smallnut <- smallnut[-c(58,59),]
#Large_PN
largenut <- subset(nuts, species.avg == 'Large_PN',
select=c(phosphorus, tss, chla, nitrogen, salinity, temperature,
N.P, abundance.avg))
largenut <- largenut[-c(58,59),]
#Taking the log of data and checking skews for Alex
alexlog <- log1p(alexnut)
#Taking the log of data and checking skews for small PN
smalllog <- log1p(smallnut)
#Taking the log of the data and checking skews for large PN
largelog <- log1p(largenut)
hist(alexlog$phosphorus)
hist(alexlog$tss)
hist(alexlog$chla)
hist(alexlog$nitrogen)
hist(alexlog$salinity)
hist(alexlog$temperature)
hist(alexlog$N.P)
hist(alexlog$abundance.avg)
#Performing the PLS for Alex
set.seed(10)
plsalex <- plsr(abundance.avg~temperature+salinity+nitrogen+phosphorus+N.P+tss+chla,
na.action = na.omit, data=alexlog, scale=TRUE, validation="LOO")
summary(plsalex)
validationplot(plsalex)
vipalex <- VIP(plsalex, opt.comp = 3)
install.packages('caret')
install.packages("caret")
install.packages("caret")
install.packages("caret")
library (caret)
install.packages('caret')
install.packages("caret")
install.packages("caret")
install.packages('plsVarSel')
library (plsVarSel)
vipalex <- VIP(plsalex, opt.comp = 3)
summary(vipalex)
vipalex
plsSmall <- plsr(abundance.avg~temperature+salinity+nitrogen+phosphorus+N.P+tss+chla,
na.action = na.omit, data=smalllog, scale=TRUE, validation="LOO")
vipsmall <- VIP(plsSmall, opt.comp = 3)
vipsmall
View(alexlog)
viplarge <- VIP(plslarge, opt.comp = 3)
plslarge <- plsr(abundance.avg~temperature+salinity+nitrogen+phosphorus+N.P+tss+chla,
na.action = na.omit, data=largelog, scale=TRUE, validation="LOO")
viplarge <- VIP(plslarge, opt.comp = 3)
viplarge
hist(alexlog$abundance.avg)
library (plsVarSel)
?lemon
library(lemon)
?lemonlibrary(DescTools)
?lemon
?nlme
library(nlme)
?nlme
?forcats
library(forcats)
?forcats
library(ggpubr)
?ggpubr
?ggpubr
??ggpubr
?lubridate
?cor.test
hist(alexlog$abundance.avg)
hist(smalllog$abundance.avg)
hist(largelog$abundance.avg)
alexlogT <- subset (alexlog, select = -tss)
View(alexlogT)
smalllogT <- subset (smalllog, select = -tss)
View(smalllogT)
largelogT <- subset (largelog, select = -tss)
View(largelogT)
plsalexT <- plsr(abundance.avg~temperature+salinity+nitrogen+phosphorus+N.P+chla,
na.action = na.omit, data=alexlogT, scale=TRUE, validation="LOO")
summary(plsalexT)
vipalex <- VIP(plsalex, opt.comp = 3)
vipalex
vipalex
vipalexT <- VIP(plsalexT, opt.comp = 3)
vipalexT
vipsmall
plsSmallT <- plsr(abundance.avg~temperature+salinity+nitrogen+phosphorus+N.P+chla,
na.action = na.omit, data=smalllogT, scale=TRUE, validation="LOO")
vipsmallT <- VIP(plsSmallT, opt.comp = 3)
vipsmallT
viplarge
plslargeT <- plsr(abundance.avg~temperature+salinity+nitrogen+phosphorus+N.P+chla,
na.action = na.omit, data=largelogT, scale=TRUE, validation="LOO")
viplargeT <- VIP(plslargeT, opt.comp = 3)
viplargeT
View(alexnut)
alexLR <- log1p(alexnut$abundance.avg)
alexLR <- log1p(alexnut$abundance.avg)
alexLR$abundance.avg <- log1p(alexnut$abundance.avg)
View(alexLR)
?log1p
alexLR$abundance.avg = log1p(alexnut$abundance.avg)
alexnut$abunLA = log(alexnut$abundance.avg)
View(alexnut)
View(alexlogT)
alexnut$abunLA = log1p(alexnut$abundance.avg)
View(alexLR)
View(alexlog)
alexnut <-  log1p(alexnut$abundance.avg)
#Separating into a file for each species
nuts <- read.csv("CML_Nut_Long.csv" , stringsAsFactors = TRUE)
#Alex
alexnut <- subset(nuts, species.avg == 'Alex',
select=c(phosphorus, chla, nitrogen, salinity, temperature,
N.P, abundance.avg))
alexnut <- alexnut[-c(58,59), ] #removed since NA for abundance data
#Small_PN
smallnut <- subset(nuts, species.avg == 'Small_PN',
select=c(phosphorus, chla, nitrogen, salinity, temperature,
N.P, abundance.avg))
smallnut <- smallnut[-c(58,59),]
#Large_PN
largenut <- subset(nuts, species.avg == 'Large_PN',
select=c(phosphorus, chla, nitrogen, salinity, temperature,
N.P, abundance.avg))
largenut <- largenut[-c(58,59),]
#Taking the log of data and checking skews for Alex
alexlog <- log1p(alexnut)
#Taking the log of data and checking skews for small PN
smalllog <- log1p(smallnut)
#Taking the log of the data and checking skews for large PN
largelog <- log1p(largenut)
View(alexlog)
alexnut %>%
mutate(abunAL = log1p(abundance.avg))
alexReg <- alexnut %>%
mutate(abunAL = log1p(abundance.avg))
View(alexReg)
smallReg <- smallnut %>%
mutate(abunSL = log1p(abundance.avg))
largeReg <- largenut %>%
mutate(abunLL = log1p(abundance.avg))
?cor.test
#Alex vs phosphorus
cor.test(alexReg$phosphorus, alexReg$abunAL, method="pearson")
cor.test(alexReg$phosphorus, alexReg$abunAL, method="kendall")
#Alex vs phosphorus
cor.test(alexReg$phosphorus, alexReg$abunAL, method="pearson")
cor.test(smallReg$phosphorus, smallReg$abunSL, method = "pearson")
cor.test(largeReg$phosphorus, largeReg$abunLL, method = "pearson")
#Alex vs phosphorus
cor.test(alexReg$phosphorus, alexReg$abunAL, method="spearman")
#Alex vs phosphorus
cor.test(alexReg$phosphorus, alexReg$abunAL, method="kendall")
cor.test(smallReg$phosphorus, smallReg$abunSL, method = "kendall")
cor.test(largeReg$phosphorus, largeReg$abunLL, method = "kendall")
