h_obs <- hamptonc %>% count(Year, Station, Species, Abundance > 0)
#Deleting false rows
c_obs <- c_obs[c_obs$`Abundance > 0` != "FALSE", ]
h_obs <- h_obs[h_obs$`Abundance > 0` != "FALSE", ]
#Keeping Specific columns
c_obs <- c_obs[ , c("Year", "Station", "Species", "n")]
h_obs <- h_obs[ , c("Year", "Station", "Species", "n")]
#Renaming n column
colnames(c_obs)<- c("Year", "Station", "Species", "Actual_obs")
colnames(h_obs)<- c("Year", "Station", "Species", "Actual_obs")
#Joining the dataframes
tobsch <- rbind(c_total, h_total)
aobsch <- rbind(c_obs, h_obs)
taobs <- tobsch %>% full_join(aobsch)
#How many times does they appear vs how many total samples there were
##Loading in basic dataframes
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
#column name change
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
#Keeping specific columns
cmlc <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hamptonc <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
View(cmlc)
View(hamptonc)
#Turning into long data
cmlc <- gather(cmlc, Species, Abundance, Alex, Large_PN, Small_PN)
hamptonc <- gather(hamptonc, Species, Abundance, Alex, Large_PN, Small_PN)
#Dropping NA values
cmlc <- cmlc %>% drop_na()
hamptonc <- hamptonc %>% drop_na()
#Counting total observations
c_total <- cmlc %>% count(Year, Station, Species)
h_total <- hamptonc %>% count(Year, Station, Species)
View(c_total)
View(h_total)
#Renaming columns
colnames(c_total)<- c("Year", "Species", "Station", "Total_obs")
colnames(h_total)<- c("Year", "Species", "Station", "Total_obs")
#Counting only >0 observations
c_obs <- cmlc %>% count(Year, Station, Species, Abundance > 0)
h_obs <- hamptonc %>% count(Year, Station, Species, Abundance > 0)
View(c_obs)
View(h_obs)
#Deleting false rows
c_obs <- c_obs[c_obs$`Abundance > 0` != "FALSE", ]
h_obs <- h_obs[h_obs$`Abundance > 0` != "FALSE", ]
#Keeping Specific columns
c_obs <- c_obs[ , c("Year", "Station", "Species", "n")]
h_obs <- h_obs[ , c("Year", "Station", "Species", "n")]
#Renaming n column
colnames(c_obs)<- c("Year", "Station", "Species", "Actual_obs")
colnames(h_obs)<- c("Year", "Station", "Species", "Actual_obs")
#Joining the dataframes
tobsch <- rbind(c_total, h_total)
View(tobsch)
aobsch <- rbind(c_obs, h_obs)
View(aobsch)
taobs <- tobsch %>% full_join(aobsch)
View(taobs)
taobs <- merge(tobsch, aobsch, by=c("Year","Station", "Species"))
taobs <- merge(tobsch, aobsch, by=c("Year", "Species"))
taobs <- merge(tobsch, aobsch, by=c("Year", "Species"))
taobs <- tobsch %>% full_join(aobsch)
View(taobs)
taobs <- cbind(tobsch, aobsch)
View(tobsch)
tobsch <- tobsch[-c(16), ]
taobs <- cbind(tobsch, aobsch)
View(taobs)
#Keeping specific columns
taobs <- taobs[ , c("Year", "Species", "Station", "Total_obs", "Actual_obs")]
colnames(taobs) <- c("Year", "Station", "Species", "Total_obs", "Actual_obs")
View(tobsch)
View(aobsch)
View(tobsch)
View(taobs)
write.csv(taobs, "to_ac_obs.csv", row.names = FALSE)
taobs <- read.csv("to_ac_obs" , stringsAsFactors = TRUE)
#How many times does they appear vs how many total samples there were
##Loading in basic dataframes
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
#column name change
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
#Keeping specific columns
cmlc <- cml[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
hamptonc <- hampton[ , c("Year", "Station", "Alex", "Large_PN", "Small_PN")]
#Turning into long data
cmlc <- gather(cmlc, Species, Abundance, Alex, Large_PN, Small_PN)
hamptonc <- gather(hamptonc, Species, Abundance, Alex, Large_PN, Small_PN)
#Dropping NA values
cmlc <- cmlc %>% drop_na()
hamptonc <- hamptonc %>% drop_na()
#Counting total observations
c_total <- cmlc %>% count(Year, Station, Species)
h_total <- hamptonc %>% count(Year, Station, Species)
#Renaming columns
colnames(c_total)<- c("Year", "Species", "Station", "Total_obs")
colnames(h_total)<- c("Year", "Species", "Station", "Total_obs")
#Counting only >0 observations
c_obs <- cmlc %>% count(Year, Station, Species, Abundance > 0)
h_obs <- hamptonc %>% count(Year, Station, Species, Abundance > 0)
#Deleting false rows
c_obs <- c_obs[c_obs$`Abundance > 0` != "FALSE", ]
h_obs <- h_obs[h_obs$`Abundance > 0` != "FALSE", ]
#Keeping Specific columns
c_obs <- c_obs[ , c("Year", "Station", "Species", "n")]
h_obs <- h_obs[ , c("Year", "Station", "Species", "n")]
#Renaming n column
colnames(c_obs)<- c("Year", "Station", "Species", "Actual_obs")
colnames(h_obs)<- c("Year", "Station", "Species", "Actual_obs")
#Joining the dataframes
tobsch <- rbind(c_total, h_total)
tobsch <- tobsch[-c(16), ]
aobsch <- rbind(c_obs, h_obs)
taobs <- cbind(tobsch, aobsch)
#Keeping specific columns and renaming
taobs <- taobs[ , c("Year", "Species", "Station", "Total_obs", "Actual_obs")]
colnames(taobs) <- c("Year", "Station", "Species", "Total_obs", "Actual_obs")
write.csv(taobs, "to_ac_obs.csv", row.names = FALSE)
View(taobs)
write.csv(taobs, "to_ac_obs.csv", row.names = FALSE)
taobs <- read.csv("to_ac_obs.csv" , stringsAsFactors = TRUE)
View(taobs)
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(tidyverse)
library(ggtext)
library(ggpubr)
library(formattable)
library(scales)
library(lubridate)
taobs <- read.csv("to_ac_obs.csv" , stringsAsFactors = TRUE)
setwd("D:/R/phyto-thesis")
View(taobs)
ptaobs <- group_by(taobs, Year, Station, Species) %>% mutate(Percent = Actual_obs/Total_obs)
View(ptaobs)
ggplot(data = ptaobs, aes(x= Year, y = Percent)) +
geom_point(stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = ptaobs, aes(x= Year, y = Percent)) +
geom_point(stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Percentage actual of total observations")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = ptaobs, aes(x= Year, y = Percent)) +
geom_point(stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Percentage times observed of total samples")+
facet_grid(rows = vars(Species), cols = vars(Station))
hampton <- read.csv("R_HHHR2.csv" , stringsAsFactors = TRUE)
cml <- read.csv("R_UNH_Pier.csv", stringsAsFactors = TRUE)
colnames(hampton)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN")
colnames(cml)<- c("Week", "Date", "Month", "Day", "Year", "Station", "Alex", "Large_PN", "Small_PN", "Temp", "Salinity")
sumch <- read.csv("sumch.csv", stringsAsFactors = TRUE)
ggplot(sumch, aes(x = Year, y = Sum))  +
geom_point(aes(fill = factor(Species)), size = 3, shape = 21) +
scale_fill_manual(values = c("#440154FF", "#1F968BFF", "#FDE725FF")) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
labs(x = "Year", y = "Log Max Abundance (Cells/l)", fill = "Species") +
facet_grid(cols = vars(Station))
ggplot(sumch, aes(x = Year, y = Sum))  +
geom_point(aes(fill = factor(Species)), size = 3, shape = 21) +
scale_fill_manual(values = c("#440154FF", "#1F968BFF", "#FDE725FF")) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab('Year')+
ylab(bquote('Log max abundance '(cells~L^-1))) +
facet_grid(cols = vars(Station))
ggplot(sumch, aes(x = Year, y = Sum))  +
geom_point(aes(fill = factor(Species)), size = 3, shape = 21) +
scale_fill_manual(values = c("#440154FF", "#1F968BFF", "#FDE725FF")) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
labs(fill = "Species") +
xlab('Year')+
ylab(bquote('Log max abundance '(cells~L^-1))) +
facet_grid(cols = vars(Station))
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station))
perch <- read.csv("percentage_maxsum.csv" , stringsAsFactors = TRUE)
ggplot(data = subset(perch, !is.na(Percent)), aes(x= Year, y = Percent)) +
geom_point(size = 3, stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Percentage max of sum")+
facet_grid(rows = vars(Species), cols = vars(Station))
ggplot(data = ptaobs, aes(x= Year, y = Percent)) +
geom_point(size = 3, stat = "identity") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
labs(x = "Year", y = "Percentage times observed of total samples")+
facet_grid(rows = vars(Species), cols = vars(Station))
write.csv(ptaobs, "percent_ta_obs.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(tidyverse)
library(ggtext)
library(ggpubr)
library(formattable)
library(scales)
library(lubridate)
setwd("D:/R/phyto-thesis")
sumch <- read.csv("sumch.csv", stringsAsFactors = TRUE)
ggplot(sumch, aes(x = Year, y = Sum))  +
geom_point(aes(fill = factor(Species)), size = 3, shape = 21) +
scale_fill_manual(values = c("#440154FF", "#1F968BFF", "#FDE725FF")) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
labs(fill = "Species") +
xlab('Year')+
ylab(bquote('Log sum abundance '(cells~L^-1))) +
facet_grid(cols = vars(Station))
View(sumch)
combch <- read.csv("combinedch.csv" , stringsAsFactors = TRUE)
#Filtering out zeros to get count for co occurance table
coocur <- combch %>% filter(Alex > 0, abundance > 0)
table(cooccur$Station, cooccur$size_class, cooccur$Year)
table(coocur$Station, coocur$size_class, coocur$Year)
#Kendall test running all the data
cor.test(coocur$abundance,coocur$Alex, method="kendall")
install.packages("nlme")
library(nlme)
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station))
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station))
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station))
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="auto", se=FALSE, fullrange=TRUE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station))
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="auto", se=TRUE, fullrange=TRUE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station))
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="auto", se=FALSE, fullrange=TRUE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station))
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station))
#Kendall test running all the data
cor.test(coocur$abundance,coocur$Alex, method="kendall")
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station), scales = "free"))
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station))
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station), scales = "free")
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station), scales = "free", labeller = label_both)
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station), scales = "free") +
coord_capped_cart(bottom='both')
install.packages("lemon")
library(lemon)
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station), scales = "free") +
coord_capped_cart(bottom='both')
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station), scales = "free") +
coord_capped_cart(bottom='both')
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_wrap(~ interaction(Station, size_class), scales='free') +
coord_capped_cart(bottom='both', left='both')
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_wrap(~ interaction(Station, size_class), scales='free', repeat.tick.labels = 'bottom')
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station), scales = "free", repeat.tick.labels = "bottom")
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station), scales = "free")
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station), scales = "free", repeat.tick.labels = "bottom")
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station), scales = "free", repeat.tick.label = "bottom")
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_grid(rows = vars(size_class), cols = vars(Station), scales = "free_x", repeat.tick.label = "bottom")
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_rep_wrap(~ interaction(size_class, Station), scales='free_x', repeat.tick.labels = 'bottom')
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE, linetype = 'dashed', fullrange = TRUE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_rep_wrap(~ interaction(size_class, Station), scales='free_x', repeat.tick.labels = 'bottom')
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE, linetype = 'dashed', fullrange = TRUE, size = 1) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_rep_wrap(~ interaction(size_class, Station), scales='free_x', repeat.tick.labels = 'bottom')
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE, linetype = 'dashed', fullrange = TRUE, size = 3) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_rep_wrap(~ interaction(size_class, Station), scales='free_x', repeat.tick.labels = 'bottom')
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE, linetype = 'dashed', fullrange = TRUE, size = 0.5) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_rep_wrap(~ interaction(size_class, Station), scales='free_x', repeat.tick.labels = 'bottom')
ggplot(combch, aes(x = abundance, y = Alex))  +
geom_point(size = 3) +
geom_smooth(method="lm", se=FALSE, linetype = 'dashed', fullrange = TRUE) +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
theme_bw() +
xlab(expression(paste("Log ", italic("Pseudo-nitzschia "), "abundance ", (cells~L^-1))))+
ylab(expression(paste("Log ", italic("Alexandrium "), "abundance ", (cells~L^-1))))+
facet_rep_wrap(~ interaction(size_class, Station), scales='free_x', repeat.tick.labels = 'bottom')
table(coocur$Station, coocur$size_class, coocur$Year)
View(coocur)
lh_alex <- coocur %>% filter(Station = "HHHR2", size_class = "Large_PN")
lh_alex <- coocur %>% filter(Station == "HHHR2", size_class == "Large_PN")
View(lh_alex)
cor.test(lh_alex$abundance, lh_alex$Alex, method="kendall")
library(DescTools)
KendallTauB(lh_alex$abundance,lh_alex$Alex)
sh_alex <- coocur %>% filter(Station == "HHHR2", size_class == "Small_PN")
cor.test(sh_alex$abundance, sh_alex$Alex, method="kendall")
KendallTauB(sh_alex$abundance,sh_alex$Alex)
lu_alex <- coocur %>% filter(Station == "UNH Pier", size_class == "Large_PN")
View(sh_alex)
View(lu_alex)
cor.test(lu_alex$abundance, lu_alex$Alex, method="kendall")
KendallTauB(lu_alex$abundance,lu_alex$Alex)
su_alex <- coocur %>% filter(Station == "UNH Pier", size_class == "Small_PN")
View(su_alex)
cor.test(su_alex$abundance, su_alex$Alex, method="kendall")
KendallTauB(su_alex$abundance,su_alex$Alex)
