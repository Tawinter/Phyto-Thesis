library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
### Summarizing with Tables and Graphs
* What is fl?
* Examine hwy  (highway mileage)
* Histogram
* Frequency Table / Bar Graphs
* Scatterplot
* Boxplot,  Conditioning Plot
```{r Summarizing and Graphing Part 1 }
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
```
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
hist(mpg$hwy, main="highway fuel efficiency in miles/gal", xlab="highway mpg")
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
detach(mpg)
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
---
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
### Summarizing with Tables and Graphs
* What is fl?
* Examine hwy  (highway mileage)
* Histogram
* Frequency Table / Bar Graphs
* Scatterplot
* Boxplot,  Conditioning Plot
```{r Summarizing and Graphing Part 1 }
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
detach(mpg)
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
hist(mpg$hwy, main="highway fuel efficiency in miles/gal", xlab="highway mpg")
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
```
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
boxplot(hwy~year,data = mpg)  #  better
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
Boxplot
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
---
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
title: "Graphs in R"
author: "Ernst Linder"
date: "2019"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
### Packages
In this presentation we are using the packages:
'MASS', 'ggplot2', 'lubridate', and 'scales'.
Please first install 'ggplot2' and 'lubridate'.  'MASS' is installed automatically with the base installation of R. 'scales' may be installed with 'ggplot2' (not sure).
### Exploring what's in a Data Set
We use the Car fuel economy data from U.S. EPA available in the  package ggplot2
*What are the variables ?*  (Use  'head' and 'tail')
*What are the dimensions ?*
```{r  Exploring Data }
library(ggplot2)
data(mpg)   # Car fuel economy data
head(mpg)   ##  head   gives the first 6 lines of the data
tail(mpg)   ##  tail   gives the last 6 lines of the data
dim(mpg)
```
### Summarizing with Tables and Graphs
* What is fl?
* Examine hwy  (highway mileage)
* Histogram
* Frequency Table / Bar Graphs
* Scatterplot
* Boxplot,  Conditioning Plot
```{r Summarizing and Graphing Part 1 }
# What is fl?
table(mpg$fl)
# Highway Miles per gallon
hist(mpg$hwy)
##  better;  use "with", then graph annotations are nicer
attach(mpg)
hist(hwy)
detach(mpg)
par(mfrow=c(1,2))
with(mpg,hist(hwy))
# Write a nice title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal ",cex.main = .7,xlab="highway mpg"))
hist(mpg$hwy, main="highway fuel efficiency in miles/gal", xlab="highway mpg")
# Examine data :  categorical Variable 'year'
table(mpg$year)   #  frequency table of categorical variable
barplot(table(mpg$year))
title(" frequency of year")
# Scatterplot:  City versus Highway Mileage
with(mpg,plot(cty,hwy))
# a better way with nicer labels
plot(hwy ~ cty, data = mpg)
title("fuel efficiency in miles/gal",cex=.8)
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
# Conditioning on a categorical variable:
plot(hwy~year,data = mpg)  # gives dotplot,  many dots stacked invisibly!
# Change year to categorical i.e. factor
mpg$year = as.factor(mpg$year)
plot(hwy~year,data = mpg)      #  same as this:
boxplot(hwy~year,data = mpg)  #  better
```
#  Boxplot
boxplot(mpg$hwy,main = "highway mileage")
head(mpg)
library(ggplot)
data(mpg)
head(mpg)
tail (mpg)
#What is fl?
table(mpg$fl)
#highway miles per gallon
hist(mpg$hwy)
# using with makes graph annotations cleaner
par(mfrow=c(1,2))
with(mpg,hist(hwy))
#Inserting a title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal",cex.main=.7,xlab=highway mpg))
#Inserting a title
with(mpg,hist(hwy,main="Highway Fuel Efficiency in miles/gal",cex.main=.7,xlab="highway mpg"))
boxplot(mpg$hwy,main = "highway mileage")
library(MASS)
data(cars93)
head(cars93)
library(MASS)
data(cars93)
head(cars93)
library(MASS)
data(cars93)
library(cars93)
library(MASS)
data("Cars93")
head(Cars93)
dim(Cars93)
attach(Cars93)
hist(mpg.highway,xlab="miles per us gallon", main="histogram")
hist(MPG.highway,xlab="Miles per US Gallon", main="Histogram")
show_col(hue_pal()(4)) ggplot2_color_codes_level_4_from_scales
setwd("C:/phyto-thesis")
#Creating N:P column
cmlnut <- read.csv("CML_Nut.csv", stringsAsFactors = TRUE)
View(cmlnut)
cml_sal <- read.csv("./PREP/cml_salinity.csv", stringsAsFactors = TRUE)
ulb_sal <- read.csv("./PREP/grbulb_salinity.csv", stringsAsFactors = TRUE)
bchn_sal<- read.csv("./PREP/bchn_salinity.csv", stringsAsFactors = TRUE)
cfil_sal <- cml_sal %>% filter(Year >= 2017)
bfil_sal <- bchn_sal %>% filter(Year >= 2017)
library(dplyr)
library(tidyr)
library(formattable)
library(forcats)
library(tidyverse)
cfil_sal <- cml_sal %>% filter(Year >= 2017)
bfil_sal <- bchn_sal %>% filter(Year >= 2017)
cfil_sal <- cfil_sal[ , c("Month", "datavalue", "Year")]
ufil_sal <- ulb_sal[ , c("Month", "datavalue", "Year")]
bfil_sal <- bfil_sal[ , c("Month", "datavalue", "Year")]
cfil_sal$MoAb <- mymonths[ cfil_sal$Month ]
#Convert month number to month 3 letter abbreviation
mymonths <- c("Jan","Feb","Mar",
"Apr","May","Jun",
"Jul","Aug","Sep",
"Oct","Nov","Dec")
max(cfil_sal, na.rm = TRUE)
max(cfil_sal$datavalue, na.rm = TRUE)
min(cfil_sal$datavalue, na.rm = TRUE)
max(bfil_sal$datavalue, na.rm = TRUE)
min(bfil_sal$datavalue, na.rm = TRUE)
max(ufil_sal$datavalue, na.rm = TRUE)
min(ufil_sal$datavalue, na.rm = TRUE)
View(cfil_sal)
fil_cml <- cfil_sal %>% filter(datavalue <= 15)
View(fil_cml)
fil_gulb <- ufil_sal %>% filter(datavalue <= 15)
View(fil_gulb)
fil_cml <- cfil_sal %>% filter(datavalue <= 19)
fil_gulb <- ufil_sal %>% filter(datavalue <= 19)
View(fil_cml)
View(fil_gulb)
fil_bchn <- bfil_sal %>% filter(datavalue <= 19)
View(fil_bchn)
fil_cml <- cfil_sal %>% filter(datavalue <= 24)
fil_bchn <- bfil_sal %>% filter(datavalue <= 24)
fil_gulb <- ufil_sal %>% filter(datavalue <= 24)
View(fil_bchn)
View(fil_cml)
fil_cml <- cfil_sal %>% filter(datavalue <= 19)
fil_bchn <- bfil_sal %>% filter(datavalue <= 19)
fil_gulb <- ufil_sal %>% filter(datavalue <= 19)
fil_cml <- cfil_sal %>% filter(datavalue <= 20)
fil_bchn <- bfil_sal %>% filter(datavalue <= 20)
fil_gulb <- ufil_sal %>% filter(datavalue <= 20)
fil_cml <- cfil_sal %>% filter(datavalue <= 21)
fil_bchn <- bfil_sal %>% filter(datavalue <= 21)
fil_gulb <- ufil_sal %>% filter(datavalue <= 21)
fil_cml <- cfil_sal %>% filter(datavalue <= 2018)
fil_cml <- cfil_sal %>% filter(year <= 2018)
fil_cml <- cfil_sal %>% filter(Year <= 2018)
fil_cml <- fil_cml %>% filter(datavalue <= 21)
fil_cml <- cfil_sal %>% filter(Year <= 2018)
fil_cml <- cfil_sal %>% filter(Year >= 2017)
cml_sal <- read.csv("./PREP/cml_salinity.csv", stringsAsFactors = TRUE)
ulb_sal <- read.csv("./PREP/grbulb_salinity.csv", stringsAsFactors = TRUE)
bchn_sal<- read.csv("./PREP/bchn_salinity.csv", stringsAsFactors = TRUE)
cfil_sal <- cml_sal %>% filter(Year >= 2017)
bfil_sal <- bchn_sal %>% filter(Year >= 2017)
cfil_sal <- cfil_sal[ , c("Month", "datavalue", "Year")]
ufil_sal <- ulb_sal[ , c("Month", "datavalue", "Year")]
bfil_sal <- bfil_sal[ , c("Month", "datavalue", "Year")]
View(cfil_sal)
fil_cml <- cfil_sal %>% filter(datavalue <= 21)
fil_bchn <- bfil_sal %>% filter(datavalue <= 21)
fil_gulb <- ufil_sal %>% filter(datavalue <= 21)
fil_cml <- cfil_sal %>% filter(datavalue <= 22)
fil_bchn <- bfil_sal %>% filter(datavalue <= 22)
fil_gulb <- ufil_sal %>% filter(datavalue <= 22)
fil_cml <- cfil_sal %>% filter(datavalue <= 23)
fil_bchn <- bfil_sal %>% filter(datavalue <= 23)
fil_gulb <- ufil_sal %>% filter(datavalue <= 23)
cfil_sal
cfil_sal <- cfil_sal %>% filter(Year = 2018)
cfil_sal <- cfil_sal %>% filter(Year == 2018)
View(cfil_sal)
fil_cml <- cfil_sal %>% filter(datavalue <= 19)
bfil_sal <- bfil_sal %>% filter(Year == 2018)
ufil_sal <- ufil_sal %>% filter(Year == 2018)
fil_cml <- cfil_sal %>% filter(datavalue <= 15)
fil_bchn <- bfil_sal %>% filter(datavalue <= 15)
fil_gulb <- ufil_sal %>% filter(datavalue <= 15)
library(dplyr)
library(tidyr)
library(formattable)
library(forcats)
library(tidyverse)
library(ggplot2)
nutrients <- read.csv("CML_Nut.csv" , stringsAsFactors = TRUE)
nutlong <- read.csv("CML_Nut_Long.csv" , stringsAsFactors = TRUE)
#Separating month and year into two columns
nutlong <- nutlong %>%
separate(fct_inorder.MY., sep="-", into = c("month", "year"))
View(nutlong)
#Graphing sum and abundance against salinity
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = salinity, y = abundance.avg,
color = year)) +
geom_point(size = 2) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_color_gradient(low="blue", high="red") +
theme_classic() +
labs (x = "Salinity (ppt)", y = "Average Abundance (Cells/l)") +
facet_grid(rows = vars(species.avg))
#Graphing sum and abundance against salinity
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = salinity, y = abundance.avg,
color = Year)) +
geom_point(size = 2) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_color_gradient(low="blue", high="red") +
theme_classic() +
labs (x = "Average Salinity (ppt)", y = "Average Abundance (Cells/l)") +
facet_grid(rows = vars(species.avg))
#Grapphing packages
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(tidyverse)
library(ggtext)
library(ggpubr)
library(formattable)
library(scales)
library(lubridate)
library(lemon)
library(viridis)
#Regression of co-occurrence packages
library(nlme)
library(DescTools)
library(mblm)
#PLS analysis packages
library(pls)
library (plsVarSel)
#Data frame corrections and manipulations
nutlong <- read.csv("CML_Nut_Long.csv" , stringsAsFactors = TRUE)
View(nutlong)
#Graphing average abundance against salinity
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = salinity, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
scale_x_continuous(breaks=seq(12,36,2)) +
theme_bw() +
xlab('Salinity (ppt)')+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
#Graphing average abundance against salinity
ggplot(nutlong[which(nutlong$abundance.avg>0), nutlong$salinity>16], aes(x = salinity, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
scale_x_continuous(breaks=seq(12,36,2)) +
theme_bw() +
xlab('Salinity (ppt)')+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
#Graphing average abundance against salinity
ggplot(nutlong[which(nutlong$abundance.avg>0), (nutlong$salinity>16)], aes(x = salinity, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
scale_x_continuous(breaks=seq(12,36,2)) +
theme_bw() +
xlab('Salinity (ppt)')+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
#Graphing average abundance against salinity
ggplot(nutlong[which(nutlong$abundance.avg>0) (nutlong$salinity>16),], aes(x = salinity, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
scale_x_continuous(breaks=seq(12,36,2)) +
theme_bw() +
xlab('Salinity (ppt)')+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
#Graphing average abundance against salinity
ggplot(nutlong[which(nutlong$abundance.avg>0),(nutlong$salinity>16),], aes(x = salinity, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
scale_x_continuous(breaks=seq(12,36,2)) +
theme_bw() +
xlab('Salinity (ppt)')+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
#Graphing average abundance against salinity
ggplot(nutlong[which(nutlong$abundance.avg>0, nutlong$salinity>16),], aes(x = salinity, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
scale_x_continuous(breaks=seq(12,36,2)) +
theme_bw() +
xlab('Salinity (ppt)')+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
#Graphing average abundance against salinity
ggplot(nutlong[which(nutlong$abundance.avg>0),], aes(x = salinity, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
scale_x_continuous(breaks=seq(12,36,2)) +
theme_bw() +
xlab('Salinity (ppt)')+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
cml_sal <- read.csv("./PREP/cml_salinity.csv", stringsAsFactors = TRUE)
ulb_sal <- read.csv("./PREP/grbulb_salinity.csv", stringsAsFactors = TRUE)
bchn_sal<- read.csv("./PREP/bchn_salinity.csv", stringsAsFactors = TRUE)
cfil_sal <- cml_sal %>% filter(Year >= 2017)
bfil_sal <- bchn_sal %>% filter(Year >= 2017)
cfil_sal <- cfil_sal[ , c("Month", "datavalue", "Year")]
ufil_sal <- ulb_sal[ , c("Month", "datavalue", "Year")]
bfil_sal <- bfil_sal[ , c("Month", "datavalue", "Year")]
cfil_sal <- cfil_sal %>% filter(Year == 2018)
nutlong_sal <- nutlong %>% filter(salinity <= 16)
View(nutlong_sal)
View(nutlong)
nutlong_sal <- nutlong %>% filter(salinity >= 16)
ggplot(nutlong_sal[which(nutlong_sal$abundance.avg>0),], aes(x = salinity, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
scale_x_continuous(breaks=seq(12,36,2)) +
theme_bw() +
xlab('Salinity (ppt)')+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
ggplot(nutlong_sal[which(nutlong_sal$abundance.avg>0),], aes(x = salinity, y = abundance.avg)) +
geom_point(size = 2.5, shape = 21, aes(fill = Year)) +
scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_fill_viridis() +
scale_x_continuous(breaks=seq(12,36,2)) +
theme_bw() +
xlab('Average Salinity (ppt)')+
ylab(bquote('Log average abundance ' ~(cells~L^-1))) +
facet_grid(rows = vars(species.avg))
